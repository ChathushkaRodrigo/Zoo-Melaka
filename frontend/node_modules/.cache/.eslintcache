[{"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/index.js":"1","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/TourApp.js":"2","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/reportWebVitals.js":"3","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/TourDetails.js":"4","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/CreateBooking.js":"5","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/NavBar.js":"6","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/TourGuideDashboard.js":"7","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/EditBooking.js":"8","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/home.js":"9","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/header.js":"10","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/footer.js":"11","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/index.js":"12","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/header.js":"13","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/home.js":"14","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/footer.js":"15","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/App.js":"16","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AllAdoptions.js":"17","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AnimalDashboard.js":"18","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectsHome.js":"19","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProfileDetails.js":"20","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/Login.js":"21","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EditProfile.js":"22","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/Home.js":"23","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EmployeeDash.js":"24","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EditPost.js":"25","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ResearchDashboard.js":"26","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CreatePost.js":"27","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EditResearch.js":"28","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ResearchDetails.js":"29","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CreateResearch.js":"30","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectCreate.js":"31","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/NavBar.js":"32","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectSearch.js":"33","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectEdit.js":"34","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/MedicalDashboard.js":"35","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EditMedical.js":"36","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AdoptionDetails.js":"37","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/UpdateAdoption.js":"38","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CreateAnimal.js":"39","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EditAnimal.js":"40","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AnimalDetails.js":"41","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/BookingDetails.js":"42","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/PostDetails.js":"43","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectReports.js":"44","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/MedicalDetails.js":"45","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AdminProfileDash.js":"46","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AdminPanelHome.js":"47","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/TourGuideDashboard.js":"48","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CreateMedical.js":"49","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CreateBooking.js":"50","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AddAdoption.js":"51","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EditBooking.js":"52","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/RequestBooking.js":"53","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CustomerResearchDash.js":"54","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/signup.js":"55","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ResearchCollaboration.js":"56","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CreateCollaboration.js":"57","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/profile.js":"58","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AnimalsforAdoption.js":"59","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/MemberAdoptedAnimals.js":"60","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AdminUProfileEdit.js":"61","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/FormErrors.js":"62","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ResearchInfo.js":"63","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/store.js":"64","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/Register.js":"65","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/actions/authActions.js":"66","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/actions/uiActions.js":"67","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/actions/statusActions.js":"68","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/actions/types.js":"69","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/reducers/index.js":"70","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/reducers/statusReducer.js":"71","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/reducers/uiReducer.js":"72","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/reducers/authReducer.js":"73","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectSlider/ProjectSlider.js":"74","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectSlider/BtnSlider.js":"75","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectSlider/dataSlider.js":"76","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/uprofile.js":"77"},{"size":495,"mtime":1629545571959,"results":"78","hashOfConfig":"79"},{"size":804,"mtime":1630511111473,"results":"80","hashOfConfig":"79"},{"size":362,"mtime":1629468827682,"results":"81","hashOfConfig":"79"},{"size":0,"mtime":1629544482942,"results":"82","hashOfConfig":"79"},{"size":323,"mtime":1629544126506,"results":"83","hashOfConfig":"79"},{"size":1503,"mtime":1629567988181,"results":"84","hashOfConfig":"79"},{"size":2469,"mtime":1629545844600,"results":"85","hashOfConfig":"79"},{"size":332,"mtime":1629544149115,"results":"86","hashOfConfig":"79"},{"size":2016,"mtime":1630511341053,"results":"87","hashOfConfig":"79"},{"size":1851,"mtime":1630510714518,"results":"88","hashOfConfig":"79"},{"size":330,"mtime":1630511409068,"results":"89","hashOfConfig":"79"},{"size":206,"mtime":1633149012567,"results":"90","hashOfConfig":"91"},{"size":1613,"mtime":1631545801748,"results":"92","hashOfConfig":"91"},{"size":2446,"mtime":1633179299684,"results":"93","hashOfConfig":"91"},{"size":441,"mtime":1633253301818,"results":"94","hashOfConfig":"91"},{"size":6915,"mtime":1633252912757,"results":"95","hashOfConfig":"91"},{"size":5622,"mtime":1633245647263,"results":"96","hashOfConfig":"91"},{"size":5901,"mtime":1633247588970,"results":"97","hashOfConfig":"91"},{"size":1225,"mtime":1633239413514,"results":"98","hashOfConfig":"91"},{"size":1589,"mtime":1631131316751,"results":"99","hashOfConfig":"91"},{"size":3795,"mtime":1633179299680,"results":"100","hashOfConfig":"91"},{"size":11056,"mtime":1633247871672,"results":"101","hashOfConfig":"91"},{"size":2041,"mtime":1631116107716,"results":"102","hashOfConfig":"91"},{"size":5268,"mtime":1633253851540,"results":"103","hashOfConfig":"91"},{"size":8798,"mtime":1633149009961,"results":"104","hashOfConfig":"91"},{"size":4071,"mtime":1633251688795,"results":"105","hashOfConfig":"91"},{"size":10943,"mtime":1633151584728,"results":"106","hashOfConfig":"91"},{"size":7427,"mtime":1633178520479,"results":"107","hashOfConfig":"91"},{"size":5050,"mtime":1633250655873,"results":"108","hashOfConfig":"91"},{"size":10845,"mtime":1633253608169,"results":"109","hashOfConfig":"91"},{"size":14023,"mtime":1633248184056,"results":"110","hashOfConfig":"91"},{"size":2735,"mtime":1633179299682,"results":"111","hashOfConfig":"91"},{"size":4548,"mtime":1633250942394,"results":"112","hashOfConfig":"91"},{"size":4774,"mtime":1633240847165,"results":"113","hashOfConfig":"91"},{"size":3084,"mtime":1633250862805,"results":"114","hashOfConfig":"91"},{"size":5210,"mtime":1633149009960,"results":"115","hashOfConfig":"91"},{"size":3587,"mtime":1633246523685,"results":"116","hashOfConfig":"91"},{"size":11013,"mtime":1633178520485,"results":"117","hashOfConfig":"91"},{"size":16281,"mtime":1633238610902,"results":"118","hashOfConfig":"91"},{"size":10705,"mtime":1633238610907,"results":"119","hashOfConfig":"91"},{"size":7029,"mtime":1633244406294,"results":"120","hashOfConfig":"91"},{"size":88253,"mtime":1633241757407,"results":"121","hashOfConfig":"91"},{"size":11004,"mtime":1633242309123,"results":"122","hashOfConfig":"91"},{"size":4090,"mtime":1633243934585,"results":"123","hashOfConfig":"91"},{"size":3907,"mtime":1633242768375,"results":"124","hashOfConfig":"91"},{"size":3878,"mtime":1633250548203,"results":"125","hashOfConfig":"91"},{"size":5481,"mtime":1633248788527,"results":"126","hashOfConfig":"91"},{"size":5518,"mtime":1633241957970,"results":"127","hashOfConfig":"91"},{"size":10818,"mtime":1633238610905,"results":"128","hashOfConfig":"91"},{"size":12442,"mtime":1633248631555,"results":"129","hashOfConfig":"91"},{"size":12706,"mtime":1633249317129,"results":"130","hashOfConfig":"91"},{"size":7445,"mtime":1633149009960,"results":"131","hashOfConfig":"91"},{"size":8624,"mtime":1633149009968,"results":"132","hashOfConfig":"91"},{"size":3152,"mtime":1633178520469,"results":"133","hashOfConfig":"91"},{"size":14698,"mtime":1633149009971,"results":"134","hashOfConfig":"91"},{"size":2442,"mtime":1633149009968,"results":"135","hashOfConfig":"91"},{"size":7416,"mtime":1633178520467,"results":"136","hashOfConfig":"91"},{"size":1625,"mtime":1633179299685,"results":"137","hashOfConfig":"91"},{"size":3911,"mtime":1633178520461,"results":"138","hashOfConfig":"91"},{"size":3139,"mtime":1633178520479,"results":"139","hashOfConfig":"91"},{"size":6004,"mtime":1633247758560,"results":"140","hashOfConfig":"91"},{"size":354,"mtime":1633149009962,"results":"141","hashOfConfig":"91"},{"size":3852,"mtime":1633178520484,"results":"142","hashOfConfig":"91"},{"size":491,"mtime":1633179299689,"results":"143","hashOfConfig":"91"},{"size":4699,"mtime":1633179299683,"results":"144","hashOfConfig":"91"},{"size":2428,"mtime":1633179299654,"results":"145","hashOfConfig":"91"},{"size":365,"mtime":1633179299657,"results":"146","hashOfConfig":"91"},{"size":294,"mtime":1633179299654,"results":"147","hashOfConfig":"91"},{"size":569,"mtime":1633179299657,"results":"148","hashOfConfig":"91"},{"size":343,"mtime":1633179299687,"results":"149","hashOfConfig":"91"},{"size":519,"mtime":1633179299688,"results":"150","hashOfConfig":"91"},{"size":554,"mtime":1633179299688,"results":"151","hashOfConfig":"91"},{"size":811,"mtime":1633179299687,"results":"152","hashOfConfig":"91"},{"size":1709,"mtime":1633239897139,"results":"153","hashOfConfig":"91"},{"size":473,"mtime":1633240364033,"results":"154","hashOfConfig":"91"},{"size":449,"mtime":1633239896194,"results":"155","hashOfConfig":"91"},{"size":7632,"mtime":1633247442318,"results":"156","hashOfConfig":"91"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},"w6535q",{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},"1795zcx",{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"182"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"182"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"182"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"182"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"182"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"182"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"182"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"182"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"182"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"182"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"182"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"182"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"182"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"182"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"182"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"182"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"182"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"182"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"182"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"182"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"182"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"182"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/index.js",[],["338","339"],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/TourApp.js",["340","341","342"],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/reportWebVitals.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/TourDetails.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/CreateBooking.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/NavBar.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/TourGuideDashboard.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/EditBooking.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/home.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/header.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooManagementSystem/frontend/src/components/footer.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/index.js",[],["343","344"],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/header.js",[],["345","346"],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/home.js",["347","348","349","350"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component, PureComponent } from 'react';\nimport { connect } from \"react-redux\";\nimport { Route, Switch, Link } from 'react-router-dom'\nimport PropTypes from \"prop-types\";\nimport store from '../store';\nimport { isAuth } from '../actions/authActions'\nimport {Redirect} from 'react-router-dom'\n\nimport '../CSS/home.css'\n\nimport BannerImage from \"../images/bannerZoo.jpg\";\nimport serviceImage from \"../images/serviceBanner.jpg\";\n\nclass home extends PureComponent{\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            \n        }\n    }\n\n    componentDidMount() {\n      // Check if session cookie is present\n      store.dispatch(isAuth());\n    }\n\n    static propTypes = {\n      button: PropTypes.bool,\n      isAuthenticated: PropTypes.bool,\n    };\n\n    render() {\n        if(this.props.isAuthenticated) {\n            //return <Redirect to=\"/profile\"/>\n          }\n\n          return (\n            <div className=\"home-body\">\n    \n            \n                \n               \n                <div className=\"home\" style={{ backgroundImage: `url(${BannerImage})` }}>\n                    <div className=\"headerContainer\">\n                     <h1>Zoo Melaka</h1>\n                        <br/><br/>\n                        <p> Fresh look at our new services join us  <br/>to serve zoo community and <br/> spend some time with us lets make <br/> good memories </p> <br/>\n                            <Link to=\"/login\">\n                                 <button > JOIN US </button>\n                            </Link>\n                    </div>\n    \n                    \n                </div>    \n                <div className=\"home\"style={{ backgroundImage: `url(${serviceImage})` }}>\n                <div className=\"headerContainer2\">\n                    <div className=\"card1\">\n                        <center>\n                            <h1>The Community</h1>\n                            <p>vemvklvmmdcmkldamcmdscmdcmldmklcmaddcmlkmklcm<br/>jkcjkncjksmcwlkoc<br/></p>\n                        </center>\n    \n                    </div>  \n                </div>\n                </div>                   \n            </div>        \n        )\n    }\n\n}\nconst mapStateToProps = (state) => ({ //Maps state to redux store as props\n    button: state.ui.button,\n    isAuthenticated: state.auth.isAuthenticated\n  \n  });\n\nexport default connect(mapStateToProps)(home);\n\n    \n","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/footer.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/App.js",["351","352","353"],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AllAdoptions.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AnimalDashboard.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectsHome.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProfileDetails.js",[],["354","355"],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/Login.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EditProfile.js",["356","357"],"/* eslint-disable react/jsx-no-duplicate-props */\n/* eslint-disable react/no-direct-mutation-state */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport \"../CSS/EditProfile.css\";\nimport { FormErrors } from './FormErrors';\nimport \"../CSS/FormError.css\";\n\nimport SplitButton from 'react-bootstrap/SplitButton';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select'\n\nclass EditProfile extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state ={\n            userid:\"\",\n            fName:\"\",\n            lName:\"\",\n            uName:\"\",\n            email:\"\",\n            password:\"\",\n            team:\"\",\n            profile:[],\n\n\n            formErrors: {email: '', password:''},\n            emailValid: false,\n            passwordValid: false,\n            formvalid: false\n        }\n    }\n    \n    // Method to handle Input\n    handleInputChange = (e)=>{\n        const {name,value} = e.target;\n        this.setState({\n            ...this.state,\n            [name]:value\n        },() => { this.validateField(name, value) }\n    );\n    }\n\n    // Method to handle user form submission\n    onSubmit =(e)=>{\n\n        const id = this.props.match.params.id;\n\n        e.preventDefault();\n\n        const {fName,lName,uName,email,password,team} = this.state;\n\n        const data={\n            fName:fName,\n            lName:lName,\n            uName:uName,\n            email:email,\n            password:password,\n            team:team\n        }\n        console.log(data);\n\n        axios.put(`http://localhost:8015/profile/update/${id}`,data).then((res)=>{\n            if(res.data.success){\n                alert(\"Profile Updated Successfully\");\n                this.setState(\n                    {\n                        fName:\"\",\n                        lName:\"\",\n                        uName:\"\",\n                        email:\"\",\n                        password:\"\",\n                        team:\"\"\n                    }\n                )\n            }          \n            \n        })   \n        \n    }\n\n    // Method to delete the profile\n    onDelete =(id)=>{\n  \n        axios.delete(`http://localhost:8015/profile/delete/${id}`).then((res) =>{\n        \n          alert(\"Deleted Successfully\");\n        \n        //   this.retrieveProfiles();\n        })\n        this.props.history.push('/'); \n    }\n\n    componentDidMount(){\n        const id = this.props.match.params.id;\n        this.state.userid = id;\n\n        axios.get(`http://localhost:8015/profile/${id}`).then((res) => {\n            if(res.data.success) {\n                this.setState({                    \n                    fName:res.data.profile.fName,\n                    lName:res.data.profile.lName,\n                    uName:res.data.profile.uName,\n                    email:res.data.profile.email,\n                    password:res.data.profile.password,\n                    team:res.data.profile.team\n                });\n                console.log(this.state.profile);                \n            }\n        });        \n    }\n\n    // Method to validate user Input\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let emailValid = this.state.emailValid;\n        let passwordValid = this.state.passwordValid;\n    \n        switch(fieldName) {\n          case 'email':\n            emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n            fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n            break;\n          case 'password':\n            passwordValid = value.length >= 6;\n            fieldValidationErrors.password = passwordValid ? '': ' is too short';\n            break;\n          default:\n            break;\n        }\n        this.setState({formErrors: fieldValidationErrors,\n                        emailValid: emailValid,\n                        passwordValid: passwordValid\n                      }, this.validateForm);\n      }\n    \n      validateForm() {\n        this.setState({formValid: this.state.emailValid && this.state.passwordValid});\n      }\n    \n      errorClass(error) {\n        return(error.length === 0 ? '' : 'has-error');\n      }\n\n\n    render() {\n\n      const handleSelect=(e)=>{\n        console.log(e);\n        \n        this.state.team = e\n        console.log(\"Helloooo: \" + this.state.team)\n        \n        this.ref.current.value = e\n      }\n\n\n        return (\n          <div>\n          <div class=\"container\">\n           <div class=\"main-body\">    \n             <div class=\"row gutters-sm\">\n               <div class=\"col-md-4 mb-3\">\n                   <br/>\n                   {/* User Profile Identification card */}\n                 <div class=\"card\">\n                   <div class=\"card-body\">\n                     <div class=\"d-flex flex-column align-items-center text-center\">                       \n                       <div class=\"mt-3\">\n                         <h4>{this.state.fName} &nbsp; {this.state.lName}</h4>\n                         <p class=\"text-secondary mb-1\">@{this.state.uName}</p>                       \n                             {/* Cancel button */}\n                           <a href={`/profile/${this.state.userid}`}> <button class=\"btn btn-primary\">\n                         &nbsp; Cancel \n                           </button></a> \n                           <a href=\"/\" className=\"btn btn-outline-danger\" onClick={() =>this.onDelete(this.state.userid)}>\n                            <i className=\"far fa-trash-alt\"></i>&nbsp;Delete                        \n                        </a>                     \n                       </div>\n                     </div>\n                   </div>\n                 </div>                  \n               </div>\n               {/* Tag to display Form Errors */}\n               <FormErrors formErrors={this.state.formErrors} className=\"FormError\"/>\n\n               {/* Begining of the Form */}\n               <form className=\"needs-validation\" noValidate>\n\n                  {/* Edit First Name */}\n                  <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>First Name</label>\n                        <input className=\"formtxt\" type=\"text\"\n                            className=\"form-control\"\n                            name=\"fName\"\n                            placeholder=\"Enter First Name\"\n                            value={this.state.fName}\n                            onChange={this.handleInputChange} />                    \n                    </div>\n\n                    {/* Edit Last Name */}\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Last Name</label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            name=\"lName\"\n                            placeholder=\"Enter Last Name\"\n                            value={this.state.lName}\n                            onChange={this.handleInputChange} />                    \n                    </div>\n\n                    {/* Edit userName */}\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>User Name</label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            name=\"uName\"\n                            placeholder=\"Enter User Name\"\n                            value={this.state.uName}\n                            onChange={this.handleInputChange} />                    \n                    </div>\n\n                    {/* Edit Email */}\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Email</label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            name=\"email\"\n                            placeholder=\"Enter Email\"\n                            value={this.state.email}\n                            onChange={this.handleInputChange} />                    \n                    </div>\n                    {/* Edit Password */}\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Password</label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            placeholder=\"Enter Password\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange} />                    \n                    </div>\n\n                  <div className=\"mb-2\">\n                    <DropdownButton align=\"center\" title=\"Employee catagory\" id=\"dropdown-menu-align-end\" onSelect={handleSelect}>\n                      <div>                    \n                    \n                        <Dropdown.Item eventKey=\"Legends\">\n                          Legends\n                        </Dropdown.Item>\n\n                        <Dropdown.Item eventKey=\"Bashers\">\n                          Bashers\n                        </Dropdown.Item>\n\n                        <Dropdown.Item eventKey=\"Fighters\">\n                          Fighters\n                        </Dropdown.Item>\n\n                        <Dropdown.Item eventKey=\"Guardians\">\n                          Guardians\n                        </Dropdown.Item>\n\n                        <Dropdown.Item eventKey=\"Protectors\">\n                          Protectors\n                        </Dropdown.Item>\n\n                        <Dropdown.Item eventKey=\"Walkers\">\n                          Walkers\n                        </Dropdown.Item>                   \n                    \n                      </div>\n                    \n                    </DropdownButton>\n\n                    <label style={{marginBottom:'5px'}} id=\"chamForm\">Designation</label>\n                    <input type=\"text\"\n                      id=\"chamathRet\"\n                      className=\"form-control\"\n                      name=\"Attended_Zookeeper\"\n                      placeholder=\"Enter The Last Attended Zookeeper:\"\n                      value={this.state.team}\n                      onChange={this.handleInputChange}\n                      ref={this.ref}\n                    />\n            </div>\n\n                    {/* Submit Button named Update */}\n                    <button className=\"btn btn-success\" type=\"submit\" onClick={this.onSubmit}>   \n                        <i className=\"far fa-check-square\"> </i>\n                        &nbsp; Update\n                    </button>    \n                </form>\n                {/* End of Form */}\n                \n             </div>\n           </div>\n       </div>      \n      </div>\n        );\n    }\n}\nexport default EditProfile;","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/Home.js",[],["358","359"],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EmployeeDash.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EditPost.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ResearchDashboard.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CreatePost.js",["360","361","362","363","364","365","366","367"],"/* eslint-disable react/jsx-no-duplicate-props */\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react'\nimport axios from 'axios';\n\nimport SplitButton from 'react-bootstrap/SplitButton';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select'\n\n\nconst initial = {\n    userName:\"\",\n        firstName:\"\",\n        eID:\"\",\n        lastName:\"\",\n        email:\"\",\n        address:\"\",\n        employeeType:\"\",\n        DOB:\"\",\n        salary:\"\",\n        userNameError:\"\",\n        emailError:\"\",\n        posts:[]\n\n}\n\nexport default class CreatePost extends Component {\n\nconstructor(props){\n    super(props);\n    this.state=initial\n\n    this.ref = React.createRef();\n    this.ref1 = React.createRef();\n    this.ref2 = React.createRef();\n    this.ref3 = React.createRef();\n    this.ref4 = React.createRef();\n    this.ref5 = React.createRef();\n    this.ref6 = React.createRef();\n    this.ref7 = React.createRef();\n}\n\n    handleInputChange =(e) =>{\n        const {name,value} = e.target;\n\n        this.setState({\n            ...this.state,\n            [name]:value\n        })\n    }\n    \n    \n    validate = () => { \n\n        let userNameError=\"\";\n        let emailError=\"\";\n        let len = 0;\n        if(!this.state.email.includes('@')){\n            emailError = \"Invalid email\";\n        }\n\n        if(emailError === \"Invalid email\"){\n            this.setState({emailError});\n            return false\n        }\n        \n        if(this.state.userName.length < 5){\n            userNameError = \"Username has to be atleast 5 characters long\";\n        }\n\n        if(userNameError === \"Username has to be atleast 5 characters long\"){\n            this.setState({userNameError});\n            return false\n        }\n\n        return true\n    }\n    \n\n\n    \n    onSubmit = (e) =>{\n        e.preventDefault();\n        const isValid = this.validate();\n        if(isValid){\n            console.log(this.state);\n\n            //clear form\n            this.setState(initial)\n            alert(\"Successfully added data to database\");\n            \n\n        }else{\n            alert(\"Requirements not fulfiled, Try again\");\n            return false\n        }\n        const {userName,firstName,eID,lastName,email,address,employeeType,DOB,salary} = this.state;\n        \n        \n        \n        const data={\n            \n            userName:userName,\n            firstName:firstName,\n            eID:eID,\n            lastName:lastName,\n            email:email,\n            address:address,\n            employeeType:employeeType,\n            DOB:DOB,\n            salary:salary\n        }\n        \n        console.log(data)\n        \n        axios.post(\"http://localhost:8015/post/save\",data).then((res)=>{\n            if(res.data.success){\n                this.setState(\n                    {\n                        username:\"\",\n                        firstName:\"\",\n                        eID:\"\",\n                  lastName:\"\",\n                  email:\"\",\n                  address:\"\",\n                  employeeType:\"\",\n                  DOB:\"\",\n                  salary:\"\"\n\n                }\n                )\n            }\n        })\n        \n    }\n    Demo = () => {\n        this.ref1.current.value = \"Test1\"\n        this.ref2.current.value = \"Test2\"\n        this.ref3.current.value = \"Test3\"\n        this.ref4.current.value = \"Test4\"\n        this.ref5.current.value = \"Test5@\"\n        this.ref6.current.value = \"Test6\"\n        this.ref7.current.value = \"Test7\"\n        this.state.email = \"Test5@\"\n        this.state.salary = \"Test5@\"\n        this.state.userName = \"Test2\"\n        this.state.firstName = \"Test3\"\n        this.state.lastName = \"Test4\"\n        this.state.address = \"Test6\"\n        this.state.eID = \"Test7\"\n        \n    }\n\n    render() {\n\n        const handleSelect=(e)=>{\n            console.log(e);\n            \n            this.state.employeeType = e\n            console.log(\"Helloooo: \" + this.state.employeeType)\n            \n            this.ref.current.value = e\n        }\n        return (\n            <div className=\"col-md-8 mt-4 mx-auto\">\n                <h1 className=\"h3 mb-3 font-weight-normal\" style={{fontFamily:'Papyrus, fantasy'}}>Create new post</h1>\n                <form className=\"needs-validation\" noValidate>\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                    <label style={{marginBottom:'5px',fontFamily:'Papyrus, fantasy',color:'black'}} >eID</label>\n                    <input type=\"text\"\n                    ref={this.ref1}\n                    className=\"form-control\"\n                    name=\"eID\"\n                    placeholder=\"\"\n                    value={this.state.eID}\n                    onChange={this.handleInputChange}/>\n                    </div>\n\n                    \n                \n                    \n\n                <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px',fontFamily:'Papyrus, fantasy',color:'black'}} >Username</label>\n                <input type=\"text\"\n                ref={this.ref2}\n                className=\"form-control\"\n                name=\"userName\"\n                placeholder=\"\"\n                value={this.state.userName}\n                onChange={this.handleInputChange}/></div>\n\n                <div style={{color:\"red\"}}>\n                    {this.state.userNameError}\n                    </div>\n\n                    \n\n                <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px',fontFamily:'Papyrus, fantasy',color:'black'}} >First Name</label>\n                <input type=\"text\"\n                ref={this.ref3}\n                className=\"form-control\"\n                name=\"firstName\"\n                placeholder=\"\"\n                value={this.state.firstName}\n                onChange={this.handleInputChange}/></div>\n\n                <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px',fontFamily:'Papyrus, fantasy',color:'black'}} >Last Name</label>\n                <input type=\"text\"\n                ref={this.ref4}\n                className=\"form-control\"\n                name=\"lastName\"\n                placeholder=\"\"\n                value={this.state.lastName}\n                onChange={this.handleInputChange}/></div>\n\n\n                <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px',fontFamily:'Papyrus, fantasy',color:'black'}} >E-mail</label>\n                <input type=\"text\"\n                ref={this.ref5}\n                className=\"form-control\"\n                name=\"email\"\n                placeholder=\"\"\n                value={this.state.email}\n                onChange={this.handleInputChange}/></div>\n\n\n                <div style={{color:\"red\"}}>\n                    {this.state.emailError}\n                    </div>\n\n\n                <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px',fontFamily:'Papyrus, fantasy',color:'black'}} >Address</label>\n                <input type=\"text\"\n                className=\"form-control\"\n                ref={this.ref6}\n                name=\"address\"\n                placeholder=\"\"\n                value={this.state.address}\n                onChange={this.handleInputChange}/></div>\n\n\n                {/* <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px',fontFamily:'Papyrus, fantasy',color:'black'}} >Employee Type</label>\n                <input type=\"text\"\n                className=\"form-control\"\n                name=\"employeeType\"\n                placeholder=\"\"\n                value={this.state.employeeType}\n                onChange={this.handleInputChange}/></div> */}\n\n            <div className=\"mb-2\">\n                <DropdownButton align=\"center\" title=\"Employee catagory\" id=\"dropdown-menu-align-end\" onSelect={handleSelect}>\n                <div>\n                \n                \n                <Dropdown.Item eventKey=\"Supervisor\">\n                Supervisor\n                </Dropdown.Item>\n                <Dropdown.Item eventKey=\"Researcher\">\n                Researcher\n                </Dropdown.Item>\n                <Dropdown.Item eventKey=\"Manager\">\n                Manager\n                </Dropdown.Item>\n                <Dropdown.Item eventKey=\"ZooKeeper\">\n                ZooKeeper\n                </Dropdown.Item>\n                <Dropdown.Item eventKey=\"Veterinarian\">\n                Veterinarian\n                </Dropdown.Item>\n                <Dropdown.Item eventKey=\"Tour Guide\">\n                Tour Guide\n                </Dropdown.Item>\n                \n                \n                </div>\n                \n                </DropdownButton>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Designation</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Attended_Zookeeper\"\n                placeholder=\"Enter The Last Attended Zookeeper:\"\n                value={this.state.Attended_Zookeeper}\n                onChange={this.handleInputChange}\n                ref={this.ref}\n                />\n            </div>\n\n\n\n\n                <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px',fontFamily:'Papyrus, fantasy',color:'black'}} >DOB</label>\n                <input type=\"text\"\n                className=\"form-control\"\n                name=\"DOB\"\n                type=\"date\"\n                placeholder=\"\"\n                value={this.state.DOB}\n                onChange={this.handleInputChange}/></div>\n\n\n                <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px',fontFamily:'Papyrus, fantasy',color:'black'}} >Salary</label>\n                <input type=\"text\"\n                className=\"form-control\"\n                ref={this.ref7}\n                name=\"salary\"\n                placeholder=\"\"\n                value={this.state.salary}\n                onChange={this.handleInputChange}/></div>\n               \n\n                    <button className=\"btn btn-success\" type=\"submit\" style={{marginTop:'15px'}} onClick={this.onSubmit}>\n                        <i className=\"far fa-check-square\"></i>\n                        &nbsp; Save\n                    </button>\n                    <button className=\"btn btn-success\" style={{marginTop:'15px'}} onClick={this.Demo} type=\"button\">\n                        <i className=\"far fa-check-square\"></i>\n                        &nbsp; Demo\n                    </button>\n                    <br/><br/><br/><br/><br/>\n\n\n                </form>\n                \n            </div>\n        )\n    }\n}\n","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EditResearch.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ResearchDetails.js",["368"],"import React, { Component } from 'react'\nimport axios from 'axios';\nimport \"../CSS/ResearchDetails.css\"\nimport jsPDF from 'jspdf'\nimport 'jspdf-autotable'\n\n\nclass ResearchDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            research:{}\n        };\n    }\n\n    componentDidMount(){\n\n        const id = this.props.match.params.id;\n\n        axios.get(`http://localhost:8015/research/${id}`).then((res)=>{\n            \n        if(res.data.success){\n                this.setState({\n                       research:res.data.research\n                });\n\n                console.log(this.state.research);\n            }\n           \n        });\n     \n                \n    }\n//Report Generate Function onClick\njspdGenerator=()=>{\n\n        \n  //doc obj\n  var doc =new jsPDF('p','pt');\n\n    \n  \n  doc.autoTable({ html: '#my-table' })\n  //add texts\n\n  doc.text(200,20,'Employee Report')\n\n  doc.autoTable({\n     \n     tableWidth:'auto',\n     margin: { top: 10 },\n      columnStyles: { europe: { halign: 'center' } },\n      theme:'grid',\n      head: [['Scientist', 'Started Date ', 'Ended Date','Catagory','Research Name','Animal ID','Decription']],\n      body: [\n       \n        [this.state.research.name_of_scientist,this.state.research.date_research_started,this.state.research.date_research_ended,this.state.research.catergory,this.state.research.research_name,this.state.research.animal_id,this.state.research.research_information],\n\n      \n        \n      ],\n     \n      styles: {  fontSize:10 },\n   \n      \n    })\n    \n  //Save pdf \n  doc.save(\"Generated.pdf\");\n\n\n}\n\n\n    render() {\n\n        const { name_of_scientist,\n            date_research_started,\n            date_research_ended,\n            catergory,\n            research_name,\n            animal_id,\n            research_information} =this.state.research;\n\n  \n        return (\n            <div>\n                  <div className=\"col-md-8 mt-4 mx-auto\" id=\"edit-booking-body\">\n                    <h1>    Research Details</h1> \n                    <br/>\n                    <br/>\n                    <div className=\"details-form\">\n                    <form>\n                    <div class=\"form-group\">\n                        <label style ={{marginBottom:'5px',color:\"black\"}} for=\"scientistName\">Name of scientist  </label>\n                        <input type=\"text\" class=\"form-control\" id=\"scientistName\" placeholder={name_of_scientist} disabled/>\n                    </div>\n                    <br/>\n                    <div class=\"form-group\">\n                    <label  style ={{marginBottom:'5px',color:\"black\"}}for=\"startDate\"> Date research started</label>\n                        <input type=\"text\" class=\"form-control\" id=\"startDate\" placeholder={ date_research_started} disabled/>\n                        \n                    </div>\n                    <br/>\n                    <div class=\"form-group\">\n                    <label  style ={{marginBottom:'5px',color:\"black\"}}for=\"endDate\"> Date research ended</label>\n                        <input type=\"text\" class=\"form-control\" id=\"endDate\" placeholder={ date_research_ended}  disabled/>\n                        \n                    </div>\n                    <br/>\n                    <div class=\"form-group\">\n                    <label  style ={{marginBottom:'5px',color:\"black\"}}for=\"catogoryName\"> Catergory</label>\n                        <input type=\"text\" class=\"form-control\" id=\"catogoryName\" placeholder={ catergory} disabled/>\n                        \n                    </div>\n                    <br/>\n                    <div class=\"form-group\">\n                    <label  style ={{marginBottom:'5px',color:\"black\"}}for=\"researchName\">Research name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"researchName\" placeholder={research_name} disabled/>\n                        \n                    </div>\n                    <br/>\n\n                    <div class=\"form-group\">\n                    <label  style ={{marginBottom:'5px',color:\"black\"}}for=\"animal_id\">Animal Id</label>\n                        <input type=\"text\" class=\"form-control\" id=\"animal_id\" placeholder={research_name} disabled/>\n                        \n                    </div>\n                    <br/>\n\n                    <div class=\"form-group\">\n                    <label style ={{marginBottom:'5px',color:\"black\"}} for=\"researchInfo\">Research information</label>\n                        <input type=\"text\" class=\"form-control\" id=\"researchInfo\" placeholder={research_information} disabled/>\n                        \n                    </div>\n                    <br/>\n                    \n                   \n                    </form>\n                    <br/>\n                    <button className=\"btn btn-success\" onClick={this.jspdGenerator}>Generate Report</button>\n\n\n                                        \n\n\n                    </div>\n\n                    </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default ResearchDetails","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CreateResearch.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectCreate.js",["369","370","371","372","373","374","375","376","377","378"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport '../CSS/Projects.css';\nimport { FormErrors } from './FormErrors';\n\n\n//integration\nimport SplitButton from 'react-bootstrap/SplitButton';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select'\n\nexport default class Create extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            projectID:\"\",\n            name:\"\",\n            title:\"\",\n            description:\"\",\n            supervisor:\"\",\n            workingTeam:\"\",\n\n\n\n            //validation part\n            formErrors: {projectID: ''},\n            projectIDValid: false,\n            formvalid: false,\n\n            value:\"\",\n            posts:[]\n\n        }\n\n        //integration\n        this.ref = React.createRef();\n        this.retrievePosts()\n        this.ref1 = React.createRef();\n        this.ref2 = React.createRef();\n        this.ref3 = React.createRef();\n        this.ref5 = React.createRef();\n        this.ref4 = React.createRef();\n     \n    }\n\n    //integration\n    retrievePosts(){\n        axios.get(\"/posts\").then(res =>{\n            if(res.data.success){\n                this.setState({\n                    posts:res.data.existingPosts\n                });\n                console.log(this.state.posts)\n            }\n        })\n    }\n\n    \n\n\n\n    handleInputChange = (e) =>{\n\n        const {name,value} = e.target;\n        this.setState({\n            ...this.state,\n            [name]:value\n        },() => { this.validateField(name, value) }\n    );\n    }\n\n    onSubmit = (e) =>{\n\n        e.preventDefault();\n        \n        const {projectID,name,title,description,supervisor,workingTeam} = this.state;\n\n        const data = {\n            projectID:projectID,\n            name:name,\n            title:title,\n            description:description,\n            supervisor:supervisor,\n            workingTeam:workingTeam\n        }\n\n        console.log(data)\n        \n        axios.post(\"http://localhost:8015/project/save\",data).then((res) =>{\n            if(res.data.success){\n                alert(\"Project created succesfully\")\n                this.setState(\n                   {\n                    projectID:\"\",\n                    name:\"\",\n                    title:\"\",\n                    description:\"\",\n                    supervisor:\"\",\n                    workingTeam:\"\"\n                   } \n                )\n            }\n        })\n\n    }\n\n\n        //validation fileds\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let projectIDValid = this.state.projectIDValid;\n    \n        switch(fieldName) {\n          case 'projectID':\n            projectIDValid = value.length <= 5;\n            fieldValidationErrors.projectID = projectIDValid ? '' : ' is too long';\n            break;\n          default:\n            break;\n        }\n        this.setState({formErrors: fieldValidationErrors,\n                        projectIDValid: projectIDValid,\n                      }, this.validateForm);\n      }\n    \n      validateForm() {\n        this.setState({formValid: this.state.projectIDValid});\n      }\n    \n      errorClass(error) {\n        return(error.length === 0 ? '' : 'has-error');\n      }\n\n\n\n    Demo = () => {\n        this.ref1.current.value = \"Test1\"\n        this.ref2.current.value = \"Test2\"\n        this.ref3.current.value = \"Test3\"\n        this.ref4.current.value = \"Test4\"\n        this.ref5.current.value = \"Test5\"\n        this.state.projectID = \"Test1\"\n        this.state.name = \"Test2\"\n        this.state.title = \"Test3\"\n        this.state.description = \"Test4\"\n        this.state.workingTeam = \"Test5\"\n    }\n    \n\n\n    render() {\n        //integration\n        const handleSelect=(e)=>{\n            console.log(e);\n            \n            this.state.value = e\n            console.log(\"Helloooo: \" + this.state.supervisor)\n            this.state.supervisor = e\n            this.ref.current.value = e\n            \n        }\n        return(\n\n\n            <div className=\"createback\">\n            <div>\n                <div className=\"Caption\">\n                <h1 className=\"pageCaption\">Create New Project</h1>\n                </div>\n                <div className=\"createF\">\n\n               \n                <form className=\"cform\">\n                    <h3 style={{marginBottom:'15px', textAlign:'center', fontSize:'32px'}}><b><u>Create New Project Form</u></b></h3>\n                    <div className=\"form-group\">\n                        <label className=\"formLabels\">Project ID</label>\n                        <input type=\"text\" style={{marginTop:'0px'}} className=\"form-control\" name=\"projectID\" placeholder=\"Enter Project ID\" value={this.state.projectID} onChange={this.handleInputChange}/>\n                    </div><div id=\"Error\"><FormErrors formErrors={this.state.formErrors} className=\"FormError\"/></div>\n                    <div className=\"form-group\">\n                        <label className=\"formLabels\">Project Name</label> \n                        <input type=\"text\" style={{marginTop:'0px'}} className=\"form-control\" name=\"name\" placeholder=\"Enter Project Name\" value={this.state.name} onChange={this.handleInputChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"formLabels\">Project Title</label>\n                        <input type=\"text\" style={{marginTop:'0px'}} className=\"form-control\" name=\"title\" placeholder=\"Enter Project Title\" value={this.state.title} onChange={this.handleInputChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"formLabels\">Project Description</label>\n                        <textarea  className=\"form-control\" name=\"description\" rows=\"5\" placeholder=\"Enter Project Description\" value={this.state.description} onChange={this.handleInputChange}/>\n                    </div>\n                    {/* <div className=\"form-group\" style={{paddingTop:'15px'}}> \n                        <label className=\"formLabels\">Supervisor</label>\n                        <input type=\"text\" style={{marginTop:'0px'}} className=\"form-control\"  name=\"supervisor\" placeholder=\"Enter Supervisor\" value={this.state.supervisor} onChange={this.handleInputChange}/>\n                    </div> */}\n                    {/* integraion */}\n                    <div className=\"mb-2\">\n                <DropdownButton align=\"center\" title=\"Supervisor\" id=\"dropdown-menu-align-end1\" onSelect={handleSelect} >\n                <div>\n                {this.state.posts.map(posts =>(\n                <div>\n                {posts.employeeType==\"Supervisor\" && \n\n                <Dropdown.Item eventKey={posts.userName}>\n                {posts.userName}\n                </Dropdown.Item>\n                }</div>\n                ))}</div>\n                \n                </DropdownButton>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Supervisor</label>\n                <input type=\"text\"\n                id=\"vinodRet\"\n                className=\"form-control\"\n                name=\"Supervisor\"\n                placeholder=\"Enter supervisor\"\n                \n                value={this.state.supervisor}\n                onChange={this.handleInputChange}\n                ref={this.ref}\n                />\n            </div>\n                    <div className=\"form-group\">\n                        <label className=\"formLabels\">Working Team</label>\n                        <input type=\"text\" style={{marginTop:'0px'}} className=\"form-control\"  name=\"workingTeam\" placeholder=\"Enter Working Team\" value={this.state.workingTeam} onChange={this.handleInputChange}/>\n                    </div>\n                    \n                        <button className=\"btn btn-danger\" id=\"btnreset\" type=\"reset\" style={{marginTop:'30px', marginLeft:'10%'}}>\n                        <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n                            &nbsp; Reset\n                        </button>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <button className=\"btn btn-success\" id=\"btnsubmit\" type=\"submit\" onClick={this.onSubmit}>\n                            <i className=\"far fa-check-square\"></i>\n                            &nbsp; Submit\n                        </button>\n                        <button className=\"btn btn-success\" style={{marginTop:'15px'}} onClick={this.Demo} type=\"button\">\n                        <i className=\"far fa-check-square\"></i>\n                        &nbsp; Demo\n                    </button>\n                   \n                </form>\n               </div>\n\n            {/* <div>\n\n                <div style={{height:'70px',textAlign:'center',backgroundColor:'#009900'}}>\n                <h3 className=\"pageCaption\" style={{marginTop:'10px',color:'#FFFFFF',padding:'19px 0'}}>Create New Project</h3>\n            </div> */}\n                {/* <form>\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Project ID</label>\n                        <input type=\"text\" ref={this.ref1} className=\"form-control\" name=\"projectID\" placeholder=\"Enter Project ID\" value={this.state.projectID} onChange={this.handleInputChange}/>\n                    </div>\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Project Name</label>\n                        <input type=\"text\" ref={this.ref2} className=\"form-control\" name=\"name\" placeholder=\"Enter Project Name\" value={this.state.name} onChange={this.handleInputChange}/>\n                    </div>\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Project Title</label>\n                        <input type=\"text\" ref={this.ref3} className=\"form-control\" name=\"title\" placeholder=\"Enter Project Title\" value={this.state.title} onChange={this.handleInputChange}/>\n                    </div>\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Project Description</label>\n                        <input type=\"text\" ref={this.ref4} className=\"form-control\" name=\"description\" placeholder=\"Enter Project Description\" value={this.state.description} onChange={this.handleInputChange}/>\n                    </div>\n                    {/* <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Supervisor</label>\n                        <input type=\"text\" className=\"form-control\" name=\"supervisor\" placeholder=\"Enter Supervisor\" value={this.state.supervisor} onChange={this.handleInputChange}/>\n                    </div> */}\n\n                {/* integraion */}\n                    {/* <div className=\"mb-2\">\n                <DropdownButton align=\"center\" title=\"Supervisor\" id=\"dropdown-menu-align-end1\" onSelect={handleSelect} >\n                <div>\n                {this.state.posts.map(posts =>(\n                <div>\n                {posts.employeeType==\"Supervisor\" && \n\n                <Dropdown.Item eventKey={posts.userName}>\n                {posts.userName}\n                </Dropdown.Item>\n                }</div>\n                ))}</div>\n                \n                </DropdownButton>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Attended Zookeeper</label>\n                <input type=\"text\"\n                id=\"vinodRet\"\n                className=\"form-control\"\n                name=\"Supervisor\"\n                placeholder=\"Enter supervisor\"\n                \n                value={this.state.supervisor}\n                onChange={this.handleInputChange}\n                ref={this.ref}\n                />\n            </div>\n          \n            <div>\n            \n    \n    </div>\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Working Team</label>\n                        <input type=\"text\" ref={this.ref5} className=\"form-control\" name=\"workingTeam\" placeholder=\"Enter Working Team\" value={this.state.workingTeam} onChange={this.handleInputChange}/>\n                    </div>\n                    <button className=\"btn btn-danger\" type=\"reset\" style={{marginTop:'15px'}}>\n                        <i className=\"far fa-trash-alt\"></i>\n                        &nbsp; Reset\n                    </button>\n                    <button className=\"btn btn-success\" type=\"submit\" style={{marginTop:'15px'}} onClick={this.onSubmit}>\n                        <i className=\"far fa-check-square\"></i>\n                        &nbsp; Submit\n                    </button>\n                    <button className=\"btn btn-success\" style={{marginTop:'15px'}} onClick={this.Demo} type=\"button\">\n                        <i className=\"far fa-check-square\"></i>\n                        &nbsp; Demo\n                    </button>\n                </form>  */}\n                {/* <br/><br/><br/><br/><br/><br/><br/>\n\n            </div>\n          </div>\n        </div> */}\n        </div>\n        </div>\n        )\n    }  \n}","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/NavBar.js",["379","380","381","382","383"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { PureComponent } from 'react';\nimport { connect } from \"react-redux\";\nimport Login from './Login';\nimport Register from './Register';\n\nimport { Route, Switch, Link } from 'react-router-dom'\nimport '../CSS/nav-bar.css'\nimport './style.css';\nimport PropTypes from \"prop-types\";\nimport store from '../store';\nimport { isAuth } from '../actions/authActions'\nimport {Redirect} from 'react-router-dom'\nimport { logout } from '../actions/authActions';\nimport { buttonReset} from '../actions/uiActions';\n\nclass NavBar extends PureComponent {\n\n   static propTypes = {\n      button: PropTypes.bool,\n      authState: PropTypes.object.isRequired,\n      buttonReset: PropTypes.func.isRequired,\n      logout: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loggedin:''\n        }\n        \n    }\n\n    onLogout = (e) => {\n      e.preventDefault();\n      this.props.buttonReset();\n      this.props.logout();\n    };\n\n    isloggedin(){\n      if(!this.props.authState.isAuthenticated) {\n         this.state.loggedin = <div class=\"login-container\">\n            \n         <Link className='divStyle' to=\"/login\"><button type=\"submit\">Login</button></Link>\n         <Link className='divStyle' to=\"/register\"><button type=\"submit\">Sign In</button></Link>\n\n         </div>\n      }\n      else{\n         \n         this.state.loggedin =<div class=\"login-container\"> <button size=\"lg\" onClick={this.onLogout} color=\"primary\">Logout</button></div>\n      }\n   }\n\n    render() {\n      this.isloggedin();\n        return (\n            \n          <nav>\n          <div class=\"menu-icon\">\n             <span class=\"fas fa-bars\"></span>\n          </div>\n          <div class=\"logo\">\n             \n          </div>\n          <div class=\"nav-items\">\n             <li><a href=\"/\">Home</a></li>\n             <li><a href=\"/booking/request\">Book Tour</a></li>\n             <li><a href=\"/animalsforadoption\">Adopt Now</a></li>\n             <li><a href=\"/contactUs\">Contact Us</a></li>\n             <li><a href=\"/aboutus\">About Us</a></li>\n             <li><a href=\"/research/customerDash/\">Researches</a></li>\n  \n          </div>\n          \n          <div class=\"topnav\">\n          <Switch>\n              <Route exact path =\"/login\" component={Login}/>\n              <Route exact path =\"/register\" component={Register}/>\n         </Switch>\n\n          {this.state.loggedin}\n       </div>\n       </nav>\n        \n            \n        )\n    }\n}\nconst mapStateToProps = (state) => ({ //Maps state to redux store as props\n   button: state.ui.button,\n   authState: state.auth\n });\n \n export default connect(mapStateToProps, { logout, buttonReset })(NavBar);\n ","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectSearch.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectEdit.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/MedicalDashboard.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EditMedical.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AdoptionDetails.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/UpdateAdoption.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CreateAnimal.js",["384","385","386","387","388","389","390","391","392","393","394","395","396"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport '../CSS/CreateAnimal.css';\nimport { FormErrors } from './FormErrors';\n\n\nimport SplitButton from 'react-bootstrap/SplitButton';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select'\n\nexport default class CreateAnimal extends Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            Animal_ID:\"\",\n            Animal_Name:\"\",\n            Animal_Species:\"\",\n            Animal_Date_Of_Birth:\"\",\n            Animal_Gender:\"\",\n            Feeding_And_Watering_Date:\"\",\n            Feeding_And_Watering_Time:\"\",\n            Animal_Satisfaction_Level:\"\",\n            Animal_Health_Level:\"\",\n            Attended_Zookeeper:\"\",\n            Date_Of_Treatment_And_Medical_Care:\"\",\n            Time_Of_Treatment_And_Medical_Care:\"\",\n            Current_Enclosure_ID:\"\",\n            Adoptability:\"false\",\n            posts:[],\n            formErrors: {Animal_ID: ''},\n            Animal_IDValid: false,\n            formvalid: false,\n            value:\"\"\n        }\n           this.ref = React.createRef();\n        this.retrievePosts()\n        \n        this.ref = React.createRef();\n        this.ref1 = React.createRef();\n        this.ref2 = React.createRef();\n        this.ref3 = React.createRef();\n        this.ref4 = React.createRef();\n        this.ref5 = React.createRef();\n        this.ref6 = React.createRef();\n        this.ref7 = React.createRef();\n        this.ref8 = React.createRef();\n        this.ref9 = React.createRef();\n        this.ref10 = React.createRef();\n        this.ref11 = React.createRef();\n    }\n\n     \n\n    \n    retrievePosts(){\n        axios.get(\"/posts\").then(res =>{\n            if(res.data.success){\n                this.setState({\n                    posts:res.data.existingPosts\n                });\n                console.log(this.state.posts)\n            }\n        })\n    }\n    // componentDidMount(){\n    //     this.retrievePosts();\n    // }\n    \n\n    handleInputChange = (e)=>{\n        const {name,value} = e.target;\n        this.setState({\n            ...this.state,\n            [name]:value\n        },() => { this.validateField(name, value) }\n    );\n    }\n\n    onSubmit = (e) =>{\n        e.preventDefault();\n        const{\n                Animal_ID,\n                Animal_Name,\n                Animal_Species,\n                Animal_Date_Of_Birth,\n                Animal_Gender,\n                Feeding_And_Watering_Date,\n                Feeding_And_Watering_Time,\n                Animal_Satisfaction_Level,\n                Animal_Health_Level,\n                Attended_Zookeeper,\n                Date_Of_Treatment_And_Medical_Care,\n                Time_Of_Treatment_And_Medical_Care,\n                Current_Enclosure_ID,\n                Adoptability\n                }=this.state;\n\n        const data={\n                Animal_ID:Animal_ID,\n                Animal_Name:Animal_Name,\n                Animal_Species:Animal_Species,\n                Animal_Date_Of_Birth:Animal_Date_Of_Birth,\n                Animal_Gender:Animal_Gender,\n                Feeding_And_Watering_Date:Feeding_And_Watering_Date,\n                Feeding_And_Watering_Time:Feeding_And_Watering_Time,\n                Animal_Satisfaction_Level:Animal_Satisfaction_Level,\n                Animal_Health_Level:Animal_Health_Level,\n                Attended_Zookeeper:Attended_Zookeeper,\n                Date_Of_Treatment_And_Medical_Care:Date_Of_Treatment_And_Medical_Care,\n                Time_Of_Treatment_And_Medical_Care:Time_Of_Treatment_And_Medical_Care,\n                Current_Enclosure_ID:Current_Enclosure_ID,\n                Adoptability:Adoptability\n                \n        }\n\n        console.log(data);\n\n        axios.post(\"http://localhost:8015/animal/save\",data).then((res)=>{\n            if(res.data.success){\n                this.setState({\n                    Animal_ID:\"\",\n                    Animal_Name:\"\",\n                    Animal_Species:\"\",\n                    Animal_Date_Of_Birth:\"\",\n                    Animal_Gender:\"\",\n                    Feeding_And_Watering_Date:\"\",\n                    Feeding_And_Watering_Time:\"\",\n                    Animal_Satisfaction_Level:\"\",\n                    Animal_Health_Level:\"\",\n                    Attended_Zookeeper:\"\",\n                    Date_Of_Treatment_And_Medical_Care:\"\",\n                    Time_Of_Treatment_And_Medical_Care:\"\",\n                    Current_Enclosure_ID:\"\",\n                    Adoptability:\"\",\n                    value:\"\"\n                    \n                }) \n                alert(\"A New Animal Record Has Been Created Successfully!\")\n            }\n        })\n\n    }\n    \n    \n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let Animal_IDValid = this.state.Animal_IDValid;\n    \n        switch(fieldName) {\n          \n          case 'Animal_ID':\n            Animal_IDValid = value.length <= 5;\n            fieldValidationErrors.Animal_ID = Animal_IDValid ? '': ' is too long';\n            break;\n          default:\n            break;\n        }\n        this.setState({formErrors: fieldValidationErrors,\n                        Animal_IDValid: Animal_IDValid\n                      }, this.validateForm);\n      }\n    \n      validateForm() {\n        this.setState({formValid: this.state.Animal_IDValid});\n      }\n    \n      errorClass(error) {\n        return(error.length === 0 ? '' : 'has-error');\n      }\n      \n      Demo = () => {\n        this.ref1.current.value = \"Test1\"\n        this.ref2.current.value = \"Test2\"\n        this.ref3.current.value = \"Test3\"\n        this.ref4.current.value = \"Test4\"\n        this.ref5.current.value = \"Test5@\"\n        this.ref6.current.value = \"Test6\"\n        this.ref7.current.value = \"Test7\"\n        // this.ref8.current.value = \"Test8\"\n        // this.ref9.current.value = \"Test9\"\n        this.ref10.current.value = \"Test10\"\n        \n        this.state.Animal_ID = \"Test5@\"\n        this.state.Animal_Name = \"Test5@\"\n        this.state.Animal_Species = \"Test2\"\n        this.state.Animal_Date_Of_Birth = \"Test3\"\n        this.state.Animal_Gender= \"Test4\"\n        this.state.Feeding_And_Watering_Date = \"Test6\"\n        this.state.Feeding_And_Watering_Time = \"Test7\"\n        // this.state.Date_Of_Treatment_And_Medical_Care = \"Test8\"\n        // this.state.Time_Of_Treatment_And_Medical_Care = \"Test9\"\n        this.state.Current_Enclosure_ID = \"Test10\"\n\n        \n    }\n    \n    render(){\n        \n        const handleSelect=(e)=>{\n            console.log(e);\n            \n            this.state.value = e\n            console.log(\"Helloooo: \" + this.state.value)\n            this.state.Attended_Zookeeper = e\n            this.ref.current.value = e\n        }\n        return(\n            <div className=\"CreateAnimal-body\">\n            <div container=\"container-fluid\" className=\"col-md-8 mx-auto\" id=\"chamathCreaForm\">\n            <center><h1 className=\"h1-CreateAnimal\">Create A New Animal For The Zoo</h1></center>\n            <form className=\"CreateAniHead\" noValidate>\n                <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Animal ID</label>\n                <input type=\"text\"\n                className=\"form-control\"\n                ref={this.ref1}\n                id=\"chamathRet\"\n                name=\"Animal_ID\"\n                placeholder=\"Enter The Animal ID:\"\n                value={this.state.Animal_ID}\n                onChange={this.handleInputChange}\n                />\n            </div><div id=\"ChamathValidation\"><FormErrors formErrors={this.state.formErrors} className=\"FormError\"/></div>\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Name</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                ref={this.ref2}\n                className=\"form-control\"\n                name=\"Animal_Name\"\n                placeholder=\"Enter The Animal Name:\"\n                value={this.state.Animal_Name}\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Species</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                ref={this.ref3}\n                className=\"form-control\"\n                name=\"Animal_Species\"\n                placeholder=\"Enter The Animal Species:\"\n                value={this.state.Animal_Species}\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Date Of Birth</label>\n                <input type=\"date\"\n                id=\"chamathRet\"\n                ref={this.ref4}\n                className=\"form-control\"\n                name=\"Animal_Date_Of_Birth\"\n                placeholder=\"Enter The Animal Date Of Birth:\"\n                value={this.state.Animal_Date_Of_Birth}\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Gender</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                ref={this.ref5}\n                className=\"form-control\"\n                name=\"Animal_Gender\"\n                placeholder=\"Enter The Animal Gender:\"\n                value={this.state.Animal_Gender}\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Feeding Date</label>\n                <input type=\"date\"\n                id=\"chamathRet\"\n                ref={this.ref6}\n                className=\"form-control\"\n                name=\"Feeding_And_Watering_Date\"\n                placeholder=\"Enter The Feeding And Watering Date:\"\n                value={this.state.Feeding_And_Watering_Date}\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Feeding Time</label>\n                <input type=\"time\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                ref={this.ref7}\n                name=\"Feeding_And_Watering_Time\"\n                placeholder=\"Enter The Feeding And Watering Time:\"\n                value={this.state.Feeding_And_Watering_Time}\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n            \n\n            {/* <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Attended Zookeeper</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Attended_Zookeeper\"\n                placeholder=\"Enter The Last Attended Zookeeper:\"\n                value={this.state.Attended_Zookeeper}\n                onChange={this.handleInputChange}\n                />\n            </div> */}\n\n            {/* <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Attended Zookeeper</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Attended_Zookeeper\"\n                placeholder=\"Enter The Last Attended Zookeeper:\"\n                value={this.state.Attended_Zookeeper}\n                onChange={this.handleInputChange}\n                />\n            </div> */}\n\n            \n           \n                \n        <div className=\"mb-2\">\n                <DropdownButton align=\"left\" title=\"Assigned Zookeeper\" id=\"dropdown-menu-align-end\" onSelect={handleSelect}>\n                <div>\n                {this.state.posts.map(posts =>(\n                <div>\n                {posts.employeeType==\"ZooKeeper\" && \n\n                <Dropdown.Item eventKey={posts.userName}>\n                {posts.userName}\n                </Dropdown.Item>\n                }</div>\n                ))}</div>\n                \n                </DropdownButton>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\"></label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Attended_Zookeeper\"\n                placeholder=\"Enter The Last Attended Zookeeper:\"\n                value={this.state.Attended_Zookeeper}\n                onChange={this.handleInputChange}\n                ref={this.ref}\n                />\n            </div>\n\n\n\n\n\n\n\n\n\n            \n\n            {/* <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Date Of Medical Care</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                ref={this.ref8}\n                name=\"Date_Of_Treatment_And_Medical_Care\"\n                placeholder=\"Enter The Date Of Treatment And Medical Care:\"\n                value={this.state.Date_Of_Treatment_And_Medical_Care}\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Time Of Medical Care</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                ref={this.ref9}\n                className=\"form-control\"\n                name=\"Time_Of_Treatment_And_Medical_Care\"\n                placeholder=\"Enter The Time Of Treatment And Medical Care:\"\n                value={this.state.Time_Of_Treatment_And_Medical_Care}\n                onChange={this.handleInputChange}\n                />\n            </div> */}\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Enclosure ID</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                ref={this.ref10}\n                className=\"form-control\"\n                name=\"Current_Enclosure_ID\"\n                placeholder=\"Enter The Current Enclosure ID:\"\n                value={this.state.Current_Enclosure_ID}\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} for='Adoptability' id=\"chamForm\">Adoptability</label>&nbsp;&nbsp;\n                <input type=\"checkbox\"\n                id=\"Adoptability\"\n                name=\"Adoptability\"\n                placeholder=\"Enter The Adoptability Status:\"\n                value=\"true\"\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n            <button className=\"btn btn-light btn-small justify-content-between btn-outline-primary\" type=\"submit\" style={{marginTop:'25px',marginBottom:'25px'}} onClick={this.onSubmit}>\n            <i className=\"fa fa-bug\"></i>\n            &nbsp;<b>Create!</b>\n            </button>\n            <button className=\"btn btn-success\" style={{marginTop:'0px', marginLeft:'25px'}} onClick={this.Demo} type=\"button\">\n                        <i className=\"far fa-check-square\"></i>\n                        &nbsp; Demo\n                    </button>\n            <br/>\n\n            <a className=\"btn btn-light btn-small justify-content-between btn-outline-danger\" href={`/animaldashboard`} style={{marginTop:'10px',marginBottom:'100px'}}>\n            <i className=\"fas fa-hippo\"></i>&nbsp;<b>Navigate To Animal Portfolio!</b>\n</a>\n            \n\n            </form>\n              \n            </div></div>\n        )\n    }\n}","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EditAnimal.js",["397","398","399","400","401"],"/* eslint-disable react/jsx-no-duplicate-props */\nimport React, {Component} from 'react';\nimport axios from 'axios';\nimport '../CSS/EditAnimal.css';\n\nimport SplitButton from 'react-bootstrap/SplitButton';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select'\nexport default class EditAnimal extends Component{\n   \n    constructor(props){\n        super(props);\n        this.state={\n            \n            Feeding_And_Watering_Date:\"\",\n            Feeding_And_Watering_Time:\"\",\n            Animal_Satisfaction_Level:\"\",\n            Animal_Health_Level:\"\",\n            Attended_Zookeeper:\"\",\n            Date_Of_Treatment_And_Medical_Care:\"\",\n            Time_Of_Treatment_And_Medical_Care:\"\",\n            Current_Enclosure_ID:\"\",\n            Adoptability:\"false\",\n            posts:[]\n            \n        }\n\n        this.ref = React.createRef();\n        this.retrievePosts()\n\n    }\n\n    retrievePosts(){\n        axios.get(\"/posts\").then(res =>{\n            if(res.data.success){\n                this.setState({\n                    posts:res.data.existingPosts\n                });\n                console.log(this.state.posts)\n            }\n        })\n    }\n\n\n\n    handleInputChange = (e) =>{\n        const {name,value} = e.target;\n        this.setState({\n            ...this.state,\n            [name]:value\n        })\n    }\n\n    onSubmit = (e) =>{\n        e.preventDefault();\n        const id = this.props.match.params.id;\n        const{\n                \n                Feeding_And_Watering_Date,\n                Feeding_And_Watering_Time,\n                Animal_Satisfaction_Level,\n                Animal_Health_Level,\n                Attended_Zookeeper,\n                Date_Of_Treatment_And_Medical_Care,\n                Time_Of_Treatment_And_Medical_Care,\n                Current_Enclosure_ID,\n                Adoptability\n                \n            }=this.state;\n\n        const data={\n                \n                Feeding_And_Watering_Date:Feeding_And_Watering_Date,\n                Feeding_And_Watering_Time:Feeding_And_Watering_Time,\n                Animal_Satisfaction_Level:Animal_Satisfaction_Level,\n                Animal_Health_Level:Animal_Health_Level,\n                Attended_Zookeeper:Attended_Zookeeper,\n                Date_Of_Treatment_And_Medical_Care:Date_Of_Treatment_And_Medical_Care,\n                Time_Of_Treatment_And_Medical_Care:Time_Of_Treatment_And_Medical_Care,\n                Current_Enclosure_ID:Current_Enclosure_ID,\n                Adoptability:Adoptability\n                \n        }\n\n        console.log(data);\n\n        axios.put(`http://localhost:8015/animal/update/${id}`,data).then((res)=>{\n            if(res.data.success){\n                alert(\"Animal Portfolio Updated Successfully!\")\n                this.setState({\n                    \n                    Feeding_And_Watering_Date:\"\",\n                    Feeding_And_Watering_Time:\"\",\n                    Animal_Satisfaction_Level:\"\",\n                    Animal_Health_Level:\"\",\n                    Attended_Zookeeper:\"\",\n                    Date_Of_Treatment_And_Medical_Care:\"\",\n                    Time_Of_Treatment_And_Medical_Care:\"\",\n                    Current_Enclosure_ID:\"\",\n                    Adoptability:\"\"\n                    \n                })\n            }\n        })\n    }\n    \n\n\n    componentDidMount(){\n        const id = this.props.match.params.id;\n        axios.get(`http://localhost:8015/animal/${id}`).then((res)=>{\n            if (res.data.success){\n                this.setState({\n                    Feeding_And_Watering_Date:res.data.post.Feeding_And_Watering_Date,\n\n                    Feeding_And_Watering_Time:res.data.post.Feeding_And_Watering_Time,\n\n                    Animal_Satisfaction_Level:res.data.post.Animal_Satisfaction_Level,\n\n                    Animal_Health_Level:res.data.post.Animal_Health_Level,\n\n                    Attended_Zookeeper:res.data.post.Attended_Zookeeper,\n\n                    Date_Of_Treatment_And_Medical_Care:res.data.post.Date_Of_Treatment_And_Medical_Care,\n\n                    Time_Of_Treatment_And_Medical_Care:res.data.post.Time_Of_Treatment_And_Medical_Care,\n\n                    Current_Enclosure_ID:res.data.post.Current_Enclosure_ID,\n\n                    Adoptability:\"false\"\n\n                   \n                });\n                \n                console.log(this.state.post);\n            }\n        });\n    }\n   \n    render(){\n\n        const handleSelect=(e)=>{\n            console.log(e);\n            \n            this.state.Attended_Zookeeper = e\n            console.log(\"Helloooo: \" + this.state.Attended_Zookeeper)\n            this.state.Attended_Zookeeper = e\n            this.ref.current.value = e\n        }\n\n\n\n\n        return(\n            <div className=\"EditAnimal-body\">\n            <div container=\"container-fluid\" className=\"col-md-8  mx-auto\" >\n            <center><h1 className=\"UpdateAniHead\">Update The Animal Portfolio</h1></center>\n            <div className=\"ChamathUpdateForm\" id=\"chamathCreaForm\">\n            <form className=\"myFormszzChamath\" noValidate>\n                <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Feeding Date</label>\n                <input type=\"date\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Feeding_And_Watering_Date\"\n                placeholder=\"Enter The Feeding_And_Watering_Date:\"\n                value={this.state.Feeding_And_Watering_Date}\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Feeding Time</label>\n                <input type=\"time\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Feeding_And_Watering_Time\"\n                placeholder=\"Enter The Feeding_And_Watering_Time:\"\n                value={this.state.Feeding_And_Watering_Time}\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n           \n\n            \n            <div className=\"mb-2\">\n                <DropdownButton align=\"left\" title=\"Assigned Zookeeper\" id=\"dropdown-menu-align-end\" onSelect={handleSelect}>\n                <div>\n                {this.state.posts.map(posts =>(\n                <div>\n                {posts.employeeType==\"ZooKeeper\" && \n\n                <Dropdown.Item eventKey={posts.userName}>\n                {posts.userName}\n                </Dropdown.Item>\n                }</div>\n                ))}</div>\n                \n                </DropdownButton>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\"></label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Attended_Zookeeper\"\n                placeholder=\"Enter The Last Attended Zookeeper:\"\n                value={this.state.Attended_Zookeeper}\n                onChange={this.handleInputChange}\n                ref={this.ref}\n                />\n            </div>\n\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            {/* <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Attended Zookeeper</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Attended_Zookeeper\"\n                placeholder=\"Enter The Last Attended_Zookeeper:\"\n                value={this.state.Attended_Zookeeper}\n                onChange={this.handleInputChange}\n                />\n            </div> */}\n\n            {/* <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Date Of Treatment And Medical Care</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Date_Of_Treatment_And_Medical_Care\"\n                placeholder=\"Enter The Date_Of_Treatment_And_Medical_Care:\"\n                value={this.state.Date_Of_Treatment_And_Medical_Care}\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Time Of Treatment And Medical Care</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Time_Of_Treatment_And_Medical_Care\"\n                placeholder=\"Enter The Time_Of_Treatment_And_Medical_Care:\"\n                value={this.state.Time_Of_Treatment_And_Medical_Care}\n                onChange={this.handleInputChange}\n                />\n            </div> */}\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Current Enclosure ID</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Current_Enclosure_ID\"\n                placeholder=\"Enter The Current_Enclosure_ID:\"\n                value={this.state.Current_Enclosure_ID}\n                onChange={this.handleInputChange}\n                />\n            </div>\n\n            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                <label style={{marginBottom:'5px'}} for='Adoptability' id=\"chamForm\">Adoptability</label>&nbsp;&nbsp;\n                <input type=\"checkbox\" \n                id=\"Adoptability\"\n                name=\"Adoptability\"\n                placeholder=\"Enter The Adoptability Status:\"\n                value=\"true\"\n                onChange={this.handleInputChange}\n                />\n            </div> </form></div>\n\n            <button className=\"btn btn-light btn-small justify-content-between btn-outline-primary\" type=\"submit\"  id=\"ChamathUp\" onClick={this.onSubmit}>\n            <i className=\"fas fa-otter\"></i>\n            &nbsp;<b>Update The Animal Portfolio!</b>\n            </button><br/>\n            <a className=\"btn btn-light btn-small justify-content-between btn-outline-danger\" href={`/animaldashboard`}  id=\"ChamathUpssz\">\n            <i className=\"fas fa-kiwi-bird\"></i>&nbsp;<b>Navigate To Animal Portfolio!</b>\n            </a>\n\n           \n              \n            </div></div>\n        )\n    }\n}","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AnimalDetails.js",["402","403","404","405","406","407","408","409","410"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport '../CSS/AnimalDetails.css';\nimport {Link} from 'react-router-dom';\nimport jsPDF from 'jspdf'\nimport 'jspdf-autotable'\nexport default class AnimalDetails extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            zooAnimal:{},\n            posts:[],\n            Medical:[]\n        };\n\n        this.retrievePosts();\n        this.retrieveMedical();\n    }\n\n    jspdGenerator=()=>{\n\n        \n        //doc obj\n        var doc =new jsPDF('p','pt');\n      \n          \n        \n        doc.autoTable({ html: '#my-table' })\n        //add texts\n      \n        doc.text(200,20,'Employee Report')\n      \n        doc.autoTable({\n           \n           tableWidth:'auto',\n           margin: { top: 10 },\n            columnStyles: { europe: { halign: 'center' } },\n            theme:'grid',\n            head: [['Animal ID','Name','Species','Date_Of_Birth','Gender','Adoptability']],\n            body: [\n             \n              [this.state.zooAnimal.Animal_ID,this.state.zooAnimal.Animal_Name,this.state.zooAnimal.Animal_Species,this.state.zooAnimal.Animal_Date_Of_Birth,this.state.zooAnimal.Animal_Gender,this.state.zooAnimal.Adoptability],\n      \n            \n              \n            ],\n           \n            styles: {  fontSize:10 },\n         \n            \n          })\n          \n      \n          \n          \n     \n        \n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n        \n      \n        //Save pdf \n        doc.save(\"Generated.pdf\");\n      \n      \n      }\n      \n\n    componentDidMount(){\n        const id = this.props.match.params.id;\n        axios.get(`http://localhost:8015/animal/${id}`).then((res)=>{\n            if (res.data.success){\n                this.setState({\n                    zooAnimal:res.data.post\n                });\n                console.log(this.state.zooAnimal);\n            }\n        });\n    }\n\n\n\n    retrievePosts(){\n        axios.get(\"/posts\").then(res =>{\n            if(res.data.success){\n                this.setState({\n                    posts:res.data.existingPosts\n                });\n                console.log(this.state.posts)\n            }\n        })\n    }\n\n\n    retrieveMedical(){\n        axios.get(\"http://localhost:8015/medical/\").then(res =>{\n          if(true){\n            this.setState({\n              Medical:res.data.existingMedical\n            });\n            console.log(this.state.Medical)\n          }\n        })\n      \n        \n      }\n\n\n\n    render(){\n        const { Animal_ID,\n                Animal_Name,\n                Animal_Species,\n                Animal_Date_Of_Birth,\n                Animal_Gender,\n                Feeding_And_Watering_Date,\n                Feeding_And_Watering_Time,\n                Animal_Satisfaction_Level,\n                Animal_Health_Level,\n                Attended_Zookeeper,\n                Date_Of_Treatment_And_Medical_Care,\n                Time_Of_Treatment_And_Medical_Care,\n                Current_Enclosure_ID,\n                Adoptability\n                 } = this.state.zooAnimal;\n        return(\n            <div className=\"AnimalDetails-body\">\n            <div className = \"container-fluid\">\n            <center><h1 id=\"AniDetHead\">Retrieve Animal Portfolio</h1></center>\n            <hr/>\n            <div className=\"ChamathRetreiveForm\" id=\"chamathCreaForm\">\n            <form className=\"myFormsChamath\">\n                    <div class=\"form-group\">\n                        <label for=\"emailC\" id=\"chamForm\">Animal Identification Number</label>\n                        <input type=\"text\" class=\"form-control\" id=\"chamathRet\" placeholder={Animal_ID} readOnly/>\n                    </div>\n\n                  \n                    \n                    <div class=\"form-group\">\n                    <label for=\"cName\" id=\"chamForm\">Animal Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"chamathRet\" placeholder={Animal_Name} readOnly/>\n                        \n                    </div>\n                    \n\n                    <div class=\"form-group\">\n                    <label for=\"cName\" id=\"chamForm\">Animal Species</label>\n                        <input type=\"text\" class=\"form-control\" id=\"chamathRet\" placeholder={Animal_Species} readOnly/>\n                        \n                    </div>\n                   \n\n                    <div class=\"form-group\">\n                    <label for=\"cName\" id=\"chamForm\">Date Of Birth</label>\n                        <input type=\"text\" class=\"form-control\" id=\"chamathRet\" placeholder={Animal_Date_Of_Birth} readOnly/>\n                        \n                    </div>\n                    \n\n                    <div class=\"form-group\">\n                    <label for=\"cName\" id=\"chamForm\">Animal Gender</label>\n                        <input type=\"text\" class=\"form-control\" id=\"chamathRet\" placeholder={Animal_Gender} readOnly/>\n                        \n                    </div>\n                   \n\n                    <div class=\"form-group\">\n                    <label for=\"cName\" id=\"chamForm\">Animal Adoptability</label>\n                        <input type=\"text\" class=\"form-control\" id=\"chamathRet\" placeholder={Adoptability} readOnly/>\n                        \n                    </div>\n                    </form></div>\n\n                    <button className=\"btn btn-success\" onClick={this.jspdGenerator}>Generate Report</button>\n                    {/* <div>\n                {this.state.Medical.map(Medical =>(\n                <div>\n                  {Medical.animalID ==\"ZooKeeper\" && \n  \n                {Medical.animalID}\n                {Medical._id}\n                \n                }</div>\n                ))}</div> */}\n\n            <div className=\"btn btn-light btn-small justify-content-center btn-outline-info\" style={{marginTop:'5px',marginBottom:'5px'}} id=\"ChamathUpsss\">\n            <i className=\"fa fa-heartbeat\"></i>\n                {this.state.Medical.map(Medical =>(\n                <div>\n                {Medical.animalID == Animal_ID && \n\n                <div>\n\n                <Link to = {`/medical/details/${Medical._id}`} style = {{textDecoration:\"none\"}}>\n                            Check Medical Records!\n                      </Link>\n\n                </div>\n\n                }</div>\n                ))}</div>\n                \n\n                \n\n\n\n           \n<center>\n<a className=\"btn btn-light btn-small justify-content-center btn-outline-success\" href={`/animaldashboard`} style={{marginTop:'5px',marginBottom:'5px'}} id=\"ChamathUpss\">\n                            <i className=\"fa fa-paw\"></i>&nbsp;<b>Retreival Completed!</b>\n</a></center>\n\n{/* <center>\n<a className=\"btn btn-light btn-small justify-content-center btn-outline-primary\" href={`/medicalDashboard`} style={{marginTop:'5px',marginBottom:'10px'}} id=\"ChamathUpsss\">\n<i className=\"fa fa-paw\"></i>&nbsp;<b>Check Medical Records!</b>\n</a></center> */}\n            </div></div>\n        )\n    }\n}\n","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/BookingDetails.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/PostDetails.js",["411","412","413","414"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport \"../CSS/ShasRet.css\"\nimport jsPDF from 'jspdf'\nimport 'jspdf-autotable'\n\nimport {Link} from 'react-router-dom';\nexport default class PostDetails extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            post:{},\n            ret:[],\n            Research:[],\n            projects:[],\n            bookings: [],\n            Medical:[],\n            zooAnimal:[],\n            \n        };\n        this.retrieveAnimal();\n        this.retrieveBookings();\n        this.retrieveResearch();\n        this.retrieveProjects();\n        this.retrieveMedical();\n    }\n//Report Generate Function onClick\njspdGenerator=()=>{\n\n        \n  //doc obj\n  var doc =new jsPDF('p','pt');\n\n    \n  \n  doc.autoTable({ html: '#my-table' })\n  //add texts\n\n  doc.text(200,20,'Employee Report')\n\n  doc.autoTable({\n     \n     tableWidth:'auto',\n     margin: { top: 10 },\n      columnStyles: { europe: { halign: 'center' } },\n      theme:'grid',\n      head: [['eID', 'userName', 'firstName','lastName','email','address','employeeType','DOB','salary']],\n      body: [\n       \n        [this.state.post.eID,this.state.post.userName,this.state.post.firstName,this.state.post.lastName,this.state.post.email,this.state.post.address,this.state.post.employeeType,this.state.post.DOB,this.state.post.salary],\n\n      \n        \n      ],\n     \n      styles: {  fontSize:10 },\n   \n      \n    })\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n  //Save pdf \n  doc.save(\"Generated.pdf\");\n\n\n}\n\n\n\n\n\n    retrieveAnimal(){\n        axios.get(\"http://localhost:8015/animal\").then(res=>{\n          if(res.data.success){\n            this.setState({\n              zooAnimal:res.data.existingPosts\n            });\n            console.log(this.state.zooAnimal);\n          }\n        });\n        }\n    retrieveMedical(){\n        axios.get(\"http://localhost:8015/medical/\").then(res =>{\n          if(true){\n            this.setState({\n              Medical:res.data.existingMedical\n            });\n            console.log(this.state.Medical)\n          }\n        })\n      \n        \n      }\n    retrieveBookings() {\n        axios.get(\"http://localhost:8015/booking\").then((res) => {\n          if (res.data.success) {\n            this.setState({\n              bookings: res.data.existingBookings,\n            });\n          }\n        });\n      }\n    retrieveProjects(){\n        axios.get('http://localhost:8015/projects').then(res =>{\n          if(res.data.success){\n            this.setState({\n              projects:res.data.existingPosts\n            });\n            console.log(this.state.projects)\n          }\n        });\n      }\n    \n\n    retrievePosts(){\n        axios.get(\"http://localhost:8015/posts\").then(res=>{\n          if(res.data.success){\n            this.setState({\n              ret:res.data.existingPosts\n            })\n            console.log(this.state.ret)\n          }\n        })\n      }\n      \n\n    componentDidMount(){\n        const id =  this.props.match.params.id;\n\n        axios.get(`/post/${id}`).then((res) =>{\n            if(res.data.success){\n                this.setState({\n                    post:res.data.post\n                })\n                console.log(this.state.post)\n            }\n        })\n    }\n\n    retrieveResearch(){\n        axios.get(\"http://localhost:8015/research\").then(res =>{\n          if(true){\n            this.setState({\n              Research:res.data.existingResearch\n            });\n            console.log(this.state.Research)\n          }\n        })\n      \n        \n      }\n    \n    render() {\n\n        const {eID,userName,firstName,lastName,email,address,employeeType,DOB,salary} = this.state.post;\n\n        return (\n            <div style={{marginTop:'20px'}}>\n                \n                 \n                <h1 style={{color:'black'}}>Hello, {userName}</h1>\n                <hr/>\n\n                <form className=\"shasForms\">\n\n                <div class=\"form-group\" id=\"shaszz\">\n                        <label style ={{marginBottom:'5px',color:\"black\"}} for=\"firstName\">First Name  </label>\n                        <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder={firstName} disabled/>\n                    </div>\n\n                \n\n                <br/>\n                    <div class=\"form-group\" id=\"shaszz\">\n                    <label  style ={{marginBottom:'5px',color:\"black\"}}for=\"lastName\"> Last Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"lastName\" placeholder={ lastName} disabled/>\n                        \n                    </div>\n\n\n                    <br/>\n                    <div class=\"form-group\" id=\"shaszz\">\n                    <label  style ={{marginBottom:'5px',color:\"black\"}}for=\"eID\"> Employee ID</label>\n                        <input type=\"text\" class=\"form-control\" id=\"eID\" placeholder={ eID}  disabled/>\n                        \n                    </div>\n                    <br/>\n                    <div class=\"form-group\" id=\"shaszz\">\n                    <label  style ={{marginBottom:'5px',color:\"black\"}}for=\"email\"> E-mail</label>\n                        <input type=\"text\" class=\"form-control\" id=\"email\" placeholder={ email} disabled/>\n                        \n                    </div>\n                    <br/>\n\n                    <div class=\"form-group\" id=\"shaszz\">\n                    <label  style ={{marginBottom:'5px',color:\"black\"}}for=\"address\"> Address</label>\n                        <input type=\"text\" class=\"form-control\" id=\"address\" placeholder={ address} disabled/>\n                        \n                    </div>\n                    <br/>\n\n                    <div class=\"form-group\" id=\"shaszz\">\n                    <label  style ={{marginBottom:'5px',color:\"black\"}}for=\"employeeType\"> Designation</label>\n                        <input type=\"text\" class=\"form-control\" id=\"employeeType\" placeholder={ employeeType} disabled/>\n                        \n                    </div>\n                    <br/>\n\n                    <div class=\"form-group\" id=\"shaszz\">\n                    <label  style ={{marginBottom:'5px',color:\"black\"}}for=\"DOB\">Date Of Birth</label>\n                        <input type=\"text\" class=\"form-control\" id=\"DOB\" placeholder={DOB} disabled/>\n                        \n                    </div>\n                    <br/>\n\n                    <div class=\"form-group\" id=\"shaszz\">\n                    <label style ={{marginBottom:'5px',color:\"black\"}} for=\"salary\">Salary</label>\n                        <input type=\"text\" class=\"form-control\" id=\"salary\" placeholder={salary} disabled/>\n                        \n                    </div>\n                    <br/>\n\n\n\n                    \n                    </form>\n                    <br/>\n                    <button className=\"btn btn-success\" onClick={this.jspdGenerator}>Generate Report</button>\n\n                <div>\n\n                \n                <div>\n                {this.state.zooAnimal.map(zooAnimal =>(\n                   \n                <div>\n               {zooAnimal.Attended_Zookeeper==userName && \n\n             \n                    <div>\n                        <center>\n                        <Link to = {`animal/details/${zooAnimal._id}`} style = {{textDecoration:\"none\"}}>\n                      <h2>Click to See Animals under the preview of our Zookeeper</h2>\n                      </Link>\n                </center>\n                    </div>\n    }</div>\n    ))}</div>\n\n\n{/* *********Vinod not completed************ */}\n\n<div>\n                {this.state.bookings.map(bookings =>(\n                   \n                <div>\n               {bookings.TourGuideName == userName && \n\n             \n                    <div>\n                        <center>\n                        <Link to = {`/booking/update/${bookings._id}`} style = {{textDecoration:\"none\"}}>\n                      <h2>Click to see tour Guide's work!</h2>\n                      </Link>\n                </center>\n                    </div>\n    }</div>\n    ))}</div>\n\n\n<div>\n                {this.state.Medical.map(Medical =>(\n                   \n                <div>\n               {Medical.vname == userName && \n\n             \n                    <div>\n                        <center>\n                        <Link to = {`/medical/details/${Medical._id}`} style = {{textDecoration:\"none\"}}>\n                      <h2>Click to see veterinarians appointments!</h2>\n                      </Link>\n                </center>\n                    </div>\n    }</div>\n    ))}</div>\n\n             \n\n<div>\n                {this.state.Medical.map(Medical =>(\n                   \n                <div>\n               {Medical.vname == userName && \n\n             \n                    <div>\n                        <center>\n                        <Link to = {`/medical/details/${Medical._id}`} style = {{textDecoration:\"none\"}}>\n                      <h2>Click to see veterinarians appointments!</h2>\n                      </Link>\n                </center>\n                    </div>\n    }</div>\n    ))}</div>\n\n\n                \n\n              </div>\n                <br/><br/><br/><br/><br/><br/>\n\n                {/* <table style={{color:'black'}}> \n                <tr>\n                    <td style={{border:\"0px\"}} className=\"col-sm-3\">FirstName</td>\n                    <td style={{border:\"0px\"}} className=\"col-sm-9\">{firstName}</td>\n                </tr>\n                <tr>\n                    <td style={{border:\"0px\"}} className=\"col-sm-3\">LastName</td>\n                    <td style={{border:\"0px\"}} className=\"col-sm-9\">{lastName}</td>\n                </tr>\n                <tr>\n                    <td style={{border:\"0px\"}} className=\"col-sm-3\">EID</td>\n                    <td style={{border:\"0px\"}} className=\"col-sm-9\">{eID}</td>\n                </tr>\n                <tr>\n                    <td style={{border:\"0px\"}} className=\"col-sm-3\">Email</td>\n                    <td style={{border:\"0px\"}} className=\"col-sm-9\">{email}</td>\n                </tr>\n                <tr>\n                    <td style={{border:\"0px\"}} className=\"col-sm-3\">Address</td>\n                    <td style={{border:\"0px\"}} className=\"col-sm-9\">{address}</td>\n                </tr>\n                <tr>\n                    <td style={{border:\"0px\"}} className=\"col-sm-3\">Designation</td>\n                    <td style={{border:\"0px\"}} className=\"col-sm-9\">{employeeType}</td>\n                </tr>\n                <tr>\n                    <td style={{border:\"0px\"}} className=\"col-sm-3\">D.O.B</td>\n                    <td style={{border:\"0px\"}} className=\"col-sm-9\">{DOB}</td>\n                </tr>\n                <tr>\n                    <td style={{border:\"0px\"}} className=\"col-sm-3\">Salary</td>\n                    <td style={{border:\"0px\"}} className=\"col-sm-9\">{salary}</td>\n                </tr>\n                </table> */}\n\n                {/* <br/><br/><br/><br/><br/><br/><br/><br/><br/> */}\n            </div>\n        )\n    }\n}","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectReports.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/MedicalDetails.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AdminProfileDash.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AdminPanelHome.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/TourGuideDashboard.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CreateMedical.js",["415","416","417","418","419","420","421","422","423","424","425"],"/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react'\nimport axios from 'axios';\nimport \"../CSS/Createmedical.css\"\n\nimport SplitButton from 'react-bootstrap/SplitButton';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select'\n\nexport default class CreateMedical extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n                vname:\"\",\n                zname:\"\",\n                animalID:\"\",\n                injID:\"\",\n                sinfo:\"\",\n                posts:[],\n                zooAnimal:[]\n\n\n\n            \n        }\n        this.retrievePosts()\n        this.ref1 = React.createRef();\n        this.ref2 = React.createRef();\n        this.ref3 = React.createRef();\n        this.ref4 = React.createRef();\n        this.ref5 = React.createRef();\n    }\n\n    componentDidMount(){\n        this.retrieveAnimal();\n      }\n\n\n      retrieveAnimal(){\n        axios.get(\"http://localhost:8015/animal\").then(res=>{\n          if(res.data.success){\n            this.setState({\n              zooAnimal:res.data.existingPosts\n            });\n            console.log(this.state.zooAnimal);\n          }\n        });\n        }\n\n\n    retrievePosts(){\n        axios.get(\"/posts\").then(res =>{\n            if(res.data.success){\n                this.setState({\n                    posts:res.data.existingPosts\n                });\n                console.log(this.state.posts)\n            }\n        })\n    }\n\n    handleInputChange = (e) =>{\n        const {name,value} =e.target;\n\n        this.setState({\n            ...this.state,\n            [name]:value\n        })\n    }\n\n    onsubmit =(e)=>{\n        e.preventDefault();\n   \n        const { vname,zname,animalID,injID,sinfo,} =this.state; \n        const data ={\n            vname:vname,\n            zname:zname,\n            animalID:animalID,\n            injID:injID,\n            sinfo:\"eye checkup\"\n        }\n        console.log(data);\n\n        axios.post(\"http://localhost:8015/medical/add\", data).then((res)=>{\n            if(res.data.success){\n                alert(`New medical Record created `)\n               \n                this.setState(\n                {\n                    vname:\"\",\n                    zname:\"\",\n                    animalID:\"\",\n                    injID:\"\",\n                    sinfo:\"\"\n\n                });\n            }\n        });\n\n        \n    }\n\n    Demo = () => {\n        this.ref1.current.value = \"Test1\"\n        this.ref2.current.value = \"Test2\"\n        this.ref3.current.value = \"Test3\"\n        this.ref4.current.value = \"Test4\"\n        this.ref5.current.value = \"Test5@\"\n\n        this.state.vname = \"Test1\"\n        this.state.zname = \"Test2\"\n        this.state.animalID = \"Test3\"\n        this.state.injID = \"Test4\"\n        this.state.sinfo = \"Test5\"\n\n        \n    }\n\n    render() {\n        const handleSelect=(e)=>{\n            console.log(e);\n            \n            this.state.vname = e\n            console.log(\"Helloooo: \" + this.state.vname)\n            this.state.vname = e\n            this.ref1.current.value = e\n        }\n        const handleSelect1=(e)=>{\n            console.log(e);\n            \n            this.state.zname = e\n            console.log(\"Helloooo: \" + this.state.vname)\n            \n            this.ref2.current.value = e\n        }\n\n        const handleSelect2=(e)=>{\n            console.log(e);\n            \n            this.state.animalID = e\n            console.log(\"Helloooo: \" + this.state.animalID)\n            \n            this.ref3.current.value = e\n        }\n\n\n\n\n        return (\n           \n            <div classsName=\"col-md-8-mt-4-mx-auto\">\n            <br/>\n                <h1 className=\"titlepage\">Create Medical Record</h1>\n                \n                <div className= \"imagemed\"> </div>\n        \n                <form className=\" needs-validation \" noValidate>\n                    {/* <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Vetenarian Name</label>\n                        <input type=\"text\"\n                        className=\"form-control\"\n                        ref={this.ref1}\n                        name=\"vname\"\n                        placeholder=\"Enter the vetenarian name\"\n                        value={this.state.vname}\n                        onChange={this.handleInputChange}/>\n                        </div> */}\n\n\n<div className=\"mb-2\">\n                <DropdownButton align=\"center\" title=\"Veterinarian\" id=\"dropdown-menu-align-end\" onSelect={handleSelect}>\n                <div>\n                {this.state.posts.map(posts =>(\n                <div>\n                {posts.employeeType==\"Veterinarian\" && \n\n                <Dropdown.Item eventKey={posts.userName}>\n                {posts.userName}\n                </Dropdown.Item>\n                }</div>\n                ))}</div>\n                \n                </DropdownButton>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Veterinarian</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Attended_Zookeeper\"\n                placeholder=\"Enter The Veterinarian:\"\n                value={this.state.vname}\n                onChange={this.handleInputChange}\n                ref={this.ref1}\n                />\n            </div>\n\n            <div className=\"mb-2\">\n                <DropdownButton align=\"center\" title=\"Attended Zookeeper\" id=\"dropdown-menu-align-end\" onSelect={handleSelect1}>\n                <div>\n                {this.state.posts.map(posts =>(\n                <div>\n                {posts.employeeType==\"ZooKeeper\" && \n\n                <Dropdown.Item eventKey={posts.userName}>\n                {posts.userName}\n                </Dropdown.Item>\n                }</div>\n                ))}</div>\n                \n                </DropdownButton>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Attended Zookeeper</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Attended_Zookeeper\"\n                placeholder=\"Enter The Last Attended Zookeeper:\"\n                value={this.state.zname}\n                onChange={this.handleInputChange}\n                ref={this.ref2}\n                />\n            </div>\n\n                        {/* <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Zoo Keeper Name</label>\n                        <input type=\"text\"\n                        className=\"form-control\"\n                        ref={this.ref2}\n                        name=\"zname\"\n                        placeholder=\"Enter the Zoo Keeper Name\"\n                        value={this.state.zname}\n                        onChange={this.handleInputChange}/>\n                        </div> */}\n\n                        \n                <div className=\"mb-2\">\n                <DropdownButton align=\"center\" title=\"Animal ID\" id=\"dropdown-menu-align-end\" onSelect={handleSelect2}>\n                <div>\n                {this.state.zooAnimal.map(zooAnimal =>(//\n                \n\n                <Dropdown.Item eventKey={zooAnimal.Animal_ID}>\n                {zooAnimal.Animal_ID}\n                </Dropdown.Item>\n                \n                ))}</div>\n                \n                </DropdownButton>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Animal ID</label>\n                <input type=\"text\"\n                id=\"chamathRet\"\n                className=\"form-control\"\n                name=\"Attended_Zookeeper\"\n                placeholder=\"Enter The Animal ID:\"\n                value={this.state.animalID}\n                onChange={this.handleInputChange}\n                ref={this.ref3}\n                />\n            </div>\n                        \n                        \n                        \n                        \n                        \n                        {/* <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Animal ID</label>\n                        <input type=\"text\"\n                        className=\"form-control\"\n                        ref={this.ref3}\n                        name=\"animalID\"\n                        placeholder=\"Enter the animalID\"\n                        value={this.state.animalID}\n                        onChange={this.handleInputChange}/>\n                        </div> */}\n                            \n\n                            \n                            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                            <label style ={{marginBottom:'5px'}}>Injection ID</label>\n                            <input type=\"text\"\n                            className=\"form-control\"\n                            ref={this.ref4}\n                            name=\"injID\"\n                            placeholder=\"Enter the Injection ID\"\n                            value={this.state.injID}\n                            onChange={this.handleInputChange}/>\n                            </div>\n\n                             \n                            <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                            <label style ={{marginBottom:'5px'}}>Surjery Info </label>\n                            <input type=\"text\"\n                            className=\"form-control\"\n                            ref={this.ref5}\n                            name=\"sinfo \"\n                            placeholder=\"Enter the Surgery Info \"\n                            defualtValue={this.state.sinfo }\n                            onChange={this.handleInputChange}/>\n                            </div>\n                        <br/><br/>\n                    <button className=\"btn btn-success\" type=\"submit\" style={{marginBottom:'15px'}} onClick={this.onsubmit}>\n                        <i className=\"far fa-check-square\"></i>\n                        &nbsp; Submit Medical Report\n                    </button>\n\n                    <button className=\"btn btn-success\" style={{marginTop:'15px'}} onClick={this.Demo} type=\"button\">\n                        <i className=\"far fa-check-square\"></i>\n                        &nbsp; Demo\n                    </button>\n                    <br/><br/><br/><br/><br/>\n                    \n                   \n                    </form>\n                <br/>\n\n    \n                <button className =\"btn btn-success\"><a href=\"/medicalDashboard\" style={{textDecoration:'none' ,color:'white' }}>  Dashboard </a></button>\n                  \n     \n\n                </div>\n\n           \n        )\n    }\n}","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CreateBooking.js",["426","427","428","429","430","431","432","433","434","435","436","437","438"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from 'react'\nimport axios from 'axios';\nimport '../CSS/create-booking.css'\nimport { FormErrors } from './FormErrors';\n\n/* Loin User*/\nimport { connect } from \"react-redux\";\n\nimport {\n\n  Button,\n\n  Card,\n\n CardTitle,\n\n  CardSubtitle,\n\n  CardBody\n\n} from \"reactstrap\";\n\nimport PropTypes from \"prop-types\";\n\nimport store from '../store';\n\nimport { isAuth } from '../actions/authActions'\n\nimport './style.css';\n\nimport { Redirect } from 'react-router-dom'\n\nimport { logout } from '../actions/authActions';\n\nimport { buttonReset} from '../actions/uiActions'; \n\n\n\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\n class CreateBooking extends Component {\n    static propTypes = {\n\n        button: PropTypes.bool,\n    \n        authState: PropTypes.object.isRequired,\n    \n        buttonReset: PropTypes.func.isRequired,\n    \n        logout: PropTypes.func.isRequired,\n    \n      };\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            CustomerEmail:\"\",\n            CustomerName:\"\",\n            MobileNumber:\"\",\n            TourOption:\"\",\n            Date:\"\",\n            Time:\"\",\n            TourGuideName:\"\",\n            formErrors: {email: '', password:''},\n            emailValid: false,\n           \n            formvalid: false,\n            posts:[]\n\n         \n            \n        }\n        this.retrievePosts();\n        this.ref1 = React.createRef();\n        this.ref2 = React.createRef();\n        this.ref3 = React.createRef();\n        this.ref4 = React.createRef();\n        this.ref5 = React.createRef();\n    }\n\n    retrievePosts(){\n        axios.get(\"/posts\").then(res =>{\n            if(res.data.success){\n                this.setState({\n                    posts:res.data.existingPosts\n                });\n                console.log(this.state.posts)\n            }\n        })\n    }\n\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let emailValid = this.state.emailValid;\n        \n    \n        switch(fieldName) {\n          case 'CustomerEmail':\n            emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n            fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n            break;\n       \n          default:\n            break;\n        }\n        this.setState({formErrors: fieldValidationErrors,\n                        emailValid: emailValid,\n                        \n                      }, this.validateForm);\n      }\n    \n      validateForm() {\n        this.setState({formValid: this.state.emailValid});\n      }\n    \n      errorClass(error) {\n        return(error.length === 0 ? '' : 'has-error');\n      }\n\n   handleInputChange = (e)=>{\n        const {name,value} = e.target;\n        this.setState({\n            ...this.state,\n            [name]:value\n        },() => { this.validateField(name, value) }\n    );\n    }\n\n    onsubmit =(e)=>{\n        e.preventDefault();\n   \n        const { CustomerEmail,CustomerName,MobileNumber,TourOption,Date,Time,TourGuideName} =this.state; \n        const data ={\n            CustomerEmail:CustomerEmail,\n            CustomerName:CustomerName,\n            MobileNumber:MobileNumber,\n            TourOption:TourOption,\n            Date:Date,\n            Time:Time,\n            TourGuideName:TourGuideName\n        }\n        console.log(data);\n\n        axios.post(\"http://localhost:8015/booking/save\", data).then((res)=>{\n            if(res.data.success){\n                alert(`New Booking created successfully for email  ${CustomerEmail}`)\n               \n                this.setState(\n                {\n                    CustomerEmail:\"\",\n                    CustomerName:\"\",\n                    MobileNumber:\"\",\n                    TourOption:\"\",\n                    Date:\"\",\n                    Time:\"\",\n                    TourGuideName:\"\"\n\n                });\n            }\n        });\n\n        \n    }\n    componentDidMount() {\n\n        // Check if session cookie is present\n    \n        store.dispatch(isAuth());\n    \n      }\n    Demo = () => {\n        this.ref1.current.value = \"Test1@gmail.com\"\n        this.ref2.current.value = \"Test2\"\n        this.ref3.current.value = \"0745645789\"\n        this.ref4.current.value = \"Test4\"\n        this.ref5.current.value = \"Test5\"\n\n        this.state.CustomerEmail = \"Test1@gmail.com\"\n        this.state.CustomerName = \"Test2\"\n        this.state.MobileNumber = \"0745645789\"\n        this.state.TourOption = \"Test4\"\n        this.state.TourGuideName = \"Test5\"\n\n    }\n\n    render() {\n        const handleSelect=(e)=>{\n            console.log(e);\n            \n            this.state.TourGuideName = e\n            \n            \n            this.ref5.current.value = e\n            \n        }\n        if(!this.props.authState.isAuthenticated) {\n\n            // return <Redirect to=\"/\" />\n      \n          }\n      \n          const {user} = this.props.authState;\n        return (\n            <div className=\"create-booking-body\">\n            <div class=\"d-flex flex-column justify-content-center w-100 h-100\">\n            <div className=\"col-md-8 mt-4 mx-auto\" id=\"content\">\n                <div id=\"header\">\n             <h1 className=\"h8 mb-8 font-weight-fw-bold align-content-center\" id=\"crtH\">  Create a Booking   </h1>\n             </div>\n             <br/>\n           \n                    <br/>\n                    \n                    <form className=\"create-form\"  >\n                   \n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label for=\"emailC\" style={{marginBottom:'5px'}}>Email address</label>\n                    <input type=\"email\" \n                        className=\"form-control\" \n                        name=\"CustomerEmail\" \n                        ref={this.ref1}\n                        id=\"cEmail\"\n                        placeholder=\"Enter your email \" \n                        defaultValue={this.state.CustomerEmail}\n                        onChange={this.handleInputChange}  \n                       \n                         required/>\n                        \n                    </div>\n                    <FormErrors formErrors={this.state.formErrors} className=\"FormError\" id=\"form-error\"/>\n                   \n\n                    <br/>\n                    <div className=\"form-group\">\n                    <label for=\"cName\" style={{marginBottom:'5px'}}>Customer Name</label>\n                        <input type=\"text\" \n                        className=\"form-control\" \n                        ref={this.ref2}\n                        id=\"cName\" name=\"CustomerName\" \n                        placeholder={ user ? `${user.name}`: ''}\n                        defaultValue= {this.state.CustomerName}  \n                        onChange={this.handleInputChange} required/>\n                        \n                    </div>\n                    <br/>\n                    <div className=\"form-group\">\n                    <label for=\"MobileNo\" style={{marginBottom:'5px'}}>Mobile Number</label>\n                        <input type=\"tel\" \n                        className=\"form-control\" \n                        ref={this.ref3}\n                        id=\"MobileNo\"name=\"MobileNumber\" \n                        placeholder=\"Enter your mobile number\"\n                        defaultValue={this.state.MobileNumber}  \n                        onChange={this.handleInputChange}  required/>\n                        \n                    </div>\n                    <br/>\n                    <div className=\"form-group\">\n                    <label for=\"TourOp\" style={{marginBottom:'5px'}}>Tour Option</label>\n                        <input type=\"text\" \n                        className=\"form-control\" \n                        ref={this.ref4}\n                        id=\"TourOp\" name=\"TourOption\" \n                        placeholder=\"Enter tour option\" \n                        defaultValue={this.state.TourOption}  \n                        onChange={this.handleInputChange} required />\n                        \n                    </div>\n                    <br/>\n                    <div className=\"form-group\">\n                    <label for=\"Date\" style={{marginBottom:'5px'}}>Date</label>\n                        <input type=\"date\" \n                        className=\"form-control\" \n                        id=\"Date\" \n                        name=\"Date\" \n                        placeholder=\"Enter date you want to visit\"  \n                        defaultValue={this.state.Date}  \n                        onChange={this.handleInputChange}  required/>\n                        \n                    </div>\n                    <br/>\n                    <div className=\"form-group\">\n                    <label for=\"Time\" style={{marginBottom:'5px'}}>Allocated time</label>\n                        <input type=\"time\" \n                        className=\"form-control\" \n                        id=\"Time\" \n                        name=\"Time\"\n                        placeholder=\"Time you want to visit\" \n                        defaultValue={this.state.Time}  \n                        onChange={this.handleInputChange} required />\n                        \n                    </div>\n                 <br/>\n                    <div className=\"mb-2\">\n                <DropdownButton align=\"center\" title=\"Tour Guide\" id=\"dropdown-menu-align-end1\" onSelect={handleSelect} >\n                <div>\n                {this.state.posts.map(posts =>(\n                <div>\n                {posts.employeeType==\"Tour Guide\" && \n\n                <Dropdown.Item eventKey={posts.userName}>\n                {posts.userName}\n                </Dropdown.Item>\n                }</div>\n                ))}</div>\n                \n                </DropdownButton>\n                <label style={{marginBottom:'5px'}} id=\"chamForm\">Tour Guide Name</label>\n                <input type=\"text\"\n                id=\"vinodRet\"\n                className=\"form-control\"\n                name=\"Supervisor\"\n                placeholder=\"Enter Tour Guide\"\n                \n                value={this.state.TourGuideName}\n                onChange={this.handleInputChange}\n                ref={this.ref5}\n                />\n            </div>    \n            \n                \n\n                    <br/>\n                    {/* <div className=\"form-group\">\n                    <label for=\"TName\" style={{marginBottom:'5px'}}>Tour Guide Name</label>\n                        <input type=\"text\" \n                        className=\"form-control\"\n                        ref={this.ref5} \n                        id=\"TName\" \n                        name=\"TourGuideName\" \n                        placeholder=\"Enter tour guide name\" \n                        defaultValue={this.state.TourGuideName}  \n                        onChange={this.handleInputChange} required/>\n                        \n                    </div> */}\n\n                    \n                    \n\n\n                        <br/><br/>\n                       \n                    <button className=\"btn btn-success\" type=\"submit\" style={{marginBottom:'15px'}} onClick={this.onsubmit}>\n                        <i className=\"far fa-check-square\"></i>\n                        &nbsp; Submit Booking\n                    </button>\n                    &nbsp;\n                    <br/>\n                   \n\n                        <br/>\n                    \n                    <div>\n                    <button className =\"btn btn-success\"><a href=\"/TourGuideDashboard\" style={{textDecoration:'none' ,color:'white' }}>  Dashboard </a></button>\n                    </div> <br/><br/>\n                    <div>\n                    <button className=\"btn btn-success\" style={{marginTop:'15px'}} onClick={this.Demo} type=\"button\">\n                        <i className=\"far fa-check-square\"></i>\n                        &nbsp; Demo\n                    </button>\n                    </div> <br/><br/>\n                    </form>\n\n                <br/>\n                    \n                </div>\n                  \n     \n\n\n           \n            \t\n</div>\n</div>\n        )\n    }\n\n\n}\n\nconst mapStateToProps = (state) => ({ //Maps state to redux store as props\n\n    button: state.ui.button,\n  \n    authState: state.auth\n  \n  });\n  \n  \n  \n  export default connect(mapStateToProps, { logout, buttonReset })( CreateBooking);\n","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AddAdoption.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/EditBooking.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/RequestBooking.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CustomerResearchDash.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/signup.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ResearchCollaboration.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/CreateCollaboration.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/profile.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AnimalsforAdoption.js",["439"],"import React, { Component } from 'react'\nimport axios from 'axios';\nimport {Link} from 'react-router-dom'\nimport \"../CSS/AnimalsforAdoption.css\"\n\nexport default class AnimalsforAdoption extends Component {\n    constructor(props){\n        super(props);\n    \n        this.state={\n          animals:[],\n          adoptables:[]\n        };\n      }\n\n      componentDidMount(){\n        this.retrieveAdoptions();\n      }\n    \n      retrieveAdoptions(){\n        axios.get(\"http://localhost:8015/animal/\").then(res =>{\n          if(res.data.success){\n            this.setState({\n              animals:res.data.existingPosts\n            });\n    \n            console.log(this.state.animals);\n            \n            this.state.animals.map((animals) => {\n                if(animals.Adoptability === 'true'){\n                    this.setState({adoptables:[...this.state.adoptables,animals]});\n                   \n                }\n            });\n            console.log(this.state.adoptables);\n\n          \n          }\n        })\n      }\n      filterData(adoptables, searchkey){\n        const result = adoptables.filter((adoptables) => \n        adoptables.Animal_Species.toLowerCase().includes(searchkey)\n        );\n        this.setState({adoptables:result});\n        }\n    \n    \n    \n    \n        handleSearchArea = (e) => {\n        const searchkey = e.currentTarget.value;\n    \n        axios.get(\"http://localhost:8015/animal/\").then(res =>{\n            if(res.data.success){\n                this.filterData(res.data.existingPosts, searchkey)\n            }\n            \n            });\n        }\n        \n    render() {\n        return (\n            <div>\n\n                <div className = 'bckgrnd'>\n                <div className = \"add-hero\">\n                    <div class=\"add-bg_image an-foradp-bgimage\"></div>\n                    <div className = \"add-content\">\n                        <p className = \"add-topic\">Animals for Adoption</p><br/>\n                        <p className = 'add-sub-content'>Become a proud conservationist of a Zoo Melaka animal today! By adopting an <br/> animal, you not only help the care and feeding of that animal, but also <br/>support education and conservation programs at the Zoo Melaka.</p>\n                  </div>\n                </div>\n                <div className = \"add-contentdiv\">\n                    <br/>\n                <div className = \"anadd-formdiv container\">\n                <h4 className = \"add-topic\">Select an Animal for adoption</h4>\n                <br/>\n                    <div className =\"aa-searchbar\">\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange = {this.handleSearchArea}></input>\n                    </div>\n                    \n                    <ul className = \"gridder\">\n                        {this.state.adoptables.map((adoptables) => (\n                           \n\n                        <li className = \"gridder-list circles\">\n                        <Link to = {`/adoption/add/${adoptables._id}`} className =\"ann-contentarea\">\n                        <div className = \"section\">\n                            <div >\n                            <img className = \"image_area circlesType lazyloaded\" alt =\"Adoption\" src = 'https://s28164.pcdn.co/files/Asian-Small-clawed-Otter-0072-2545-300x300.jpg'></img>\n                            <h5 className = \"ann-contentarea \">{adoptables.Animal_Species}</h5>\n                            </div>\n                            <div >\n                                    \n                            </div>\n                        </div>\n                        </Link>\n                    </li>\n\n                        ))}\n                        \n                        \n                    </ul>\n                    \n                </div>\n\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/MemberAdoptedAnimals.js",["440"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport '../CSS/MemberAdoptedAnimals.css'\n\nexport default class MemberAdoptedAnimals extends Component {\n\n    constructor(props){\n        super(props);\n    \n        this.state={\n          adoptions:[],\n          membersanimals:[],\n          memberid:'M00069'\n        };\n      }\n    \n      componentDidMount(){\n        this.retrieveAdoptions();\n      }\n    \n      retrieveAdoptions(){\n        axios.get(\"http://localhost:8015/adoption/\").then(res =>{\n          if(res.data.success){\n            this.setState({\n              adoptions:res.data.existingAdoptions\n            });\n    \n            console.log(this.state.adoptions)\n\n            this.state.adoptions.map((adoptions) => {\n                if(adoptions.member_id === this.state.memberid){\n                    this.setState({membersanimals:[...this.state.membersanimals,adoptions]});\n                   \n                }\n            });\n            console.log(this.state.membersanimals);\n\n          }\n        })\n      }\n\n    onDelete = (id) => {\n      axios.delete(`http://localhost:8015/adoption/delete/${id}`).then((res) => {\n            alert(\"Delete Successfull\");\n            this.retrieveAdoptions();\n      })\n    }\n  \n      \n\n    render() {\n        return (\n           \n                <div>\n\n<div className = 'bckgrnd'>\n<div className = \"add-hero\">\n    <div class=\"add-bg_image mem-adpt-bgimage\"></div>\n    <div className = \"add-content\">\n        <p className = \"mem-adopt-topic\">My Adoptions</p><br/>\n  </div>\n</div>\n<div className = \"add-contentdiv\">\n    <br/>\n<div className = \"anadd-formdiv container\">\n{/* <h4>You can Change Adoption Details and Cancel Adoption Subscription</h4> */}\n<br/>\n    \n    \n    <ul className = \"gridder\">\n    {this.state.membersanimals.map((membersanimals) => (\n                           \n       \n        <li className = \"mem-gridder-list circles\">\n            \n            <div className = \"section\">\n                <div >\n                <img className = \"image_area circlesType lazyloaded\"  alt =\"Adoption\" src = 'https://s28164.pcdn.co/files/Asian-Small-clawed-Otter-0072-2545-300x300.jpg'></img>\n                <h5 className = \"mem-adpt-contentarea \">{membersanimals.animal_name}</h5><br/>\n               \n                 \n                 <Link to = {`/adoption/edit/${membersanimals._id}`} className =\"mem-adpt-contentarea\">\n                 <a className = \"btn\" href = \"#\">\n                     <i className= \"\"></i>&nbsp;Edit\n                      </a>\n                </Link>\n                      &nbsp;\n                \n                      <a className = \"btn\" href = \"#\" onClick = {() => this.onDelete(membersanimals._id)}>\n                        <i className= \"\"></i>&nbsp;CancelAdoption\n                        </a>\n                \n                </div>\n                <div >\n                        \n                </div>\n            </div>\n            \n        </li>\n\n    ))}\n\n        \n    </ul>\n    \n</div>\n\n</div>\n</div>\n            </div>\n        )\n    }\n}\n","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/AdminUProfileEdit.js",["441","442","443","444","445"],"/* eslint-disable react/no-direct-mutation-state */\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nimport SplitButton from 'react-bootstrap/SplitButton';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select'\n\nclass AdminUProfileEdit extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state ={\n            userid:\"\",\n            fName:\"\",\n            lName:\"\",\n            uName:\"\",\n            email:\"\",\n            password:\"\",\n            team:\"\"\n        }\n    }\n\n    handleInputChange = (e)=>{\n        const {name,value} = e.target;\n        this.setState({\n            ...this.state,\n            [name]:value\n        })\n    }\n\n    onSubmit =(e)=>{\n\n        const id = this.props.match.params.id;\n\n        e.preventDefault();\n\n        const {fName,lName,uName,email,password,team} = this.state;\n\n        const data={\n            fName:fName,\n            lName:lName,\n            uName:uName,\n            email:email,\n            password:password,\n            team:team\n        }\n        console.log(data);\n\n        axios.put(`http://localhost:8015/profile/update/${id}`,data).then((res)=>{\n            if(res.data.success){\n                alert(\"Profile Updated Successfully\");\n                this.setState(\n                    {\n                        fName:\"\",\n                        lName:\"\",\n                        uName:\"\",\n                        email:\"\",\n                        password:\"\",\n                        team:\"\"\n                    }\n                )\n            }          \n            \n        })   \n        \n    }\n\n    onDelete =(id)=>{\n  \n        axios.delete(`http://localhost:8015/profile/delete/${id}`).then((res) =>{\n        \n          alert(\"Deleted Successfully\");\n        \n        //   this.retrieveProfiles();\n        })\n        this.props.history.push('/'); \n    }\n\n    componentDidMount(){\n        const id = this.props.match.params.id;\n        this.state.userid = id;\n\n        axios.get(`http://localhost:8015/profile/${id}`).then((res) => {\n            if(res.data.success) {\n                this.setState({                    \n                    fName:res.data.profile.fName,\n                    lName:res.data.profile.lName,\n                    uName:res.data.profile.uName,\n                    email:res.data.profile.email,\n                    password:res.data.profile.password,\n                    team:res.data.profile.team\n                });\n                console.log(this.state.profile);                \n            }\n        });        \n    }\n    render() {\n\n        const handleSelect=(e)=>{\n            console.log(e);\n            \n            this.state.team = e\n            console.log(\"Helloooo: \" + this.state.team)\n            \n            this.ref.current.value = e\n        }\n\n        return (\n          <div className=\"col-md-8 mt-4 mx-auto\">\n            <h1 className=\"h3 mb-3 font-weight-normal\">Edit Profile</h1>\n              <form className=\"needs-validation\" noValidate>\n                  <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>First Name</label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            name=\"fName\"\n                            placeholder=\"Enter First Name\"\n                            value={this.state.fName}\n                            onChange={this.handleInputChange} />                    \n                    </div>\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Last Name</label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            name=\"lName\"\n                            placeholder=\"Enter Last Name\"\n                            value={this.state.lName}\n                            onChange={this.handleInputChange} />                    \n                    </div>\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>User Name</label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            name=\"uName\"\n                            placeholder=\"Enter User Name\"\n                            value={this.state.uName}\n                            onChange={this.handleInputChange} />                    \n                    </div>\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Email</label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            name=\"email\"\n                            placeholder=\"Enter Email\"\n                            value={this.state.email}\n                            onChange={this.handleInputChange} />                    \n                    </div>\n                    <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                        <label style={{marginBottom:'5px'}}>Password</label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            placeholder=\"Enter Password\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange} />                    \n                    </div>\n    \n                    <button className=\"btn btn-success\" type=\"submit\" onClick={this.onSubmit}>   \n                        <i className=\"far fa-check-square\"> </i>\n                        &nbsp; Update\n                    </button>\n    \n                </form>\n            </div>\n        );\n    }\n}\nexport default AdminUProfileEdit;","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/FormErrors.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ResearchInfo.js",["446"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"../CSS/EditResearch.css\"\n\nclass ResearchInfo extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state ={\n                name_of_scientist:\"\",\n                date_research_started:\"\",\n                date_research_ended:\"\",\n                catergory:\"\",\n                research_name:\"\",\n                animal_id:\"\",\n                research_information:\"\"\n                \n        }\n    }\n\n    handleInputChange = (e)=>{\n        const {name,value} = e.target;\n        this.setState({\n            ...this.state,\n            [name]:value\n        })\n    }\n\n    onSubmit =(e)=>{\n\n        const id = this.props.match.params.id;\n\n        e.preventDefault();\n\n        const {name_of_scientist,\n            date_research_started,\n            date_research_ended,\n            catergory,\n            research_name,\n            animal_id,\n            research_information} = this.state;\n\n        const data={\n            name_of_scientist:name_of_scientist,\n            date_research_started:date_research_started,\n            date_research_ended:date_research_ended,\n            catergory: catergory,\n            research_name:research_name,\n            research_information:research_information\n        }\n        console.log(data);\n\n        axios.put(`http://localhost:8015/research/update/${id}`,data).then((res)=>{\n            if(res.data.success){\n                alert(\"Research Updated Successfully\");\n                this.setState(\n                    {name_of_scientist:\"\",\n                    date_research_started:\"\",\n                    date_research_ended:\"\",\n                    catergory:\"\",\n                    research_name:\"\",\n                    animal_id:\"\",\n                    research_information:\"\"\n                    }\n                )\n            }\n        })   \n    }\n\n    componentDidMount(){\n        const id = this.props.match.params.id;\n\n        axios.get(`http://localhost:8015/research/${id}`).then((res) => {\n            if(res.data.success) {\n                this.setState({\n\n                    name_of_scientist:res.data.research.name_of_scientist,\n                    date_research_started:res.data.research.date_research_started,\n                    date_research_ended:res.data.research.date_research_ended,\n                    catergory:res.data.research.catergory,\n                    research_name:res.data.research.research_name,\n                    animal_id:res.data.animal_id,\n                    research_information:res.data.research.research_information\n\n                });\n                console.log(this.state.research);\n            }\n        });\n    }\n    render() {\n        return (\n            <div className=\"topic1\">\n            <div className=\"col-md-8 mt-4 mx-auto\">\n            <h1 className=\"h3 mb-3 font-weight-normal\">Edit Research Information</h1>\n            <div className=\"  image5\"> </div>\n              <form className=\" formbody1 needs-validation\" noValidate>\n                  <div className=\"form-group\" style={{marginBottom:'15px'}}>\n                  <br/>\n                        <label style={{marginBottom:'5px',color:\"black\"}}>research_information</label>\n                        <textarea name=\"research_information\" rows=\"20\" cols=\"100\" value={this.state.research_information}\n                            onChange={this.handleInputChange} ></textarea>\n                      \n                    </div>\n                \n    \n                    <button className=\"btn btn-success\" type=\"submit\" onClick={this.onSubmit}>   \n                        <i className=\"far fa-check-square\"> </i>\n                        &nbsp; Update\n                    </button>\n    \n                </form>\n            </div>\n            </div>\n        );\n    }\n}\nexport default ResearchInfo;","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/store.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/Register.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/actions/authActions.js",["447"],"import axios from \"axios\";\nimport { returnStatus } from \"./statusActions\";\n\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  AUTH_SUCCESS,\n  AUTH_FAIL,\n  LOGOUT_SUCCESS,\n  IS_LOADING,\n} from \"./types\";\n\n//Uncomment below for local testing\n// axios.defaults.baseURL = \"http://localhost:5000\";\n\n//uncomment and set url to your own for prod\n//axios.defaults.baseURL = \"https://demos.shawndsilva.com/sessions-auth-app\"\n\n//Check if user is already logged in\nexport const isAuth = () => (dispatch) => {\n\n    axios\n    .get(\"/api/users/authchecker\",{withCredentials:true})\n    .then((res) =>\n      dispatch({\n        type: AUTH_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch((err) => {\n      dispatch({\n        type: AUTH_FAIL\n      });\n    });\n\n}\n\n//Register New User\nexport const register = ({ name, email, password }) => (dispatch) => {\n  // Headers\n  const headers = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post(\"/api/users/register\", body, headers)\n    .then((res) =>{\n      dispatch(returnStatus(res.data, res.status, 'REGISTER_SUCCESS'));\n      dispatch({ type: IS_LOADING })\n    })\n    .catch((err) => {\n      dispatch(returnStatus(err.response.data, err.response.status, 'REGISTER_FAIL'))\n      dispatch({\n        type: REGISTER_FAIL\n      });\n      dispatch({ type: IS_LOADING })\n    });\n};\n\n//Login User\nexport const login = ({ email, password }) => (dispatch) => {\n  // Headers\n  const headers = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/api/users/login\", body, headers)\n    .then((res) => {\n      console.log(res);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      dispatch({ type: IS_LOADING });\n    }\n    )\n    .catch((err) => {\n      dispatch(returnStatus(err.response.data, err.response.status, 'LOGIN_FAIL'))\n      dispatch({\n        type: LOGIN_FAIL\n      });\n      dispatch({ type: IS_LOADING })\n    });\n};\n\n//Logout User and Destroy session\nexport const logout = () => (dispatch) => {\n\n    axios\n    .delete(\"/api/users/logout\", { withCredentials: true })\n    .then((res) =>\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      })\n    )\n    .catch((err) => {\n      console.log(err);\n    });\n\n}","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/actions/uiActions.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/actions/statusActions.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/actions/types.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/reducers/index.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/reducers/statusReducer.js",["448"],"import { GET_STATUS, CLEAR_STATUS} from '../actions/types';\n\nconst initialState = {\n  statusMsg: {},\n  respCode: null,\n  id: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_STATUS:\n      return {\n        statusMsg: action.payload.msg,\n        respCode: action.payload.status,\n        id: action.payload.id\n      }\n\n    case CLEAR_STATUS:\n      return {\n        statusMsg: {},\n        respCode: null,\n        id: null\n      };\n\n    default:\n      return state;\n  }\n\n}","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/reducers/uiReducer.js",["449"],"import {\n  BUTTON_CLICKED,\n  BUTTON_RESET,\n  IS_LOADING,\n} from \"./../actions/types\";\n\nconst initialState = {\n  button: true,\n  loading: false\n};\n\nexport default function (state = initialState, action ) {\n  switch (action.type) {\n    case BUTTON_CLICKED:\n      return {\n        ...state,\n        button: false\n      };\n\n      case BUTTON_RESET:\n      return {\n        ...state,\n        button: true\n      };\n\n      case IS_LOADING:\n        return {\n          ...state,\n          loading: !state.loading\n        };\n    default:\n        return state;\n  }\n}","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/reducers/authReducer.js",["450"],"import {\n\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  AUTH_SUCCESS,\n  AUTH_FAIL\n} from \"../actions/types\";\n\n\nconst initialState = {\n  isAuthenticated: null,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload\n      };\n\n    case LOGIN_SUCCESS:\n    case AUTH_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload\n      };\n\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n    case AUTH_FAIL:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n      }\n\n    default:\n        return state;\n  }\n\n}","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectSlider/ProjectSlider.js",["451"],"import React, {useState} from 'react'\r\nimport './Slider.css'\r\nimport BtnSlider from './BtnSlider'\r\nimport dataSlider from './dataSlider'\r\n\r\nexport default function Slider() {\r\n\r\n    const [slideIndex, setSlideIndex] = useState(1)\r\n\r\n    const nextSlide = () => {\r\n        if(slideIndex !== dataSlider.length){\r\n            setSlideIndex(slideIndex + 1)\r\n        } \r\n        else if (slideIndex === dataSlider.length){\r\n            setSlideIndex(1)\r\n        }\r\n    }\r\n\r\n    const prevSlide = () => {\r\n        if(slideIndex !== 1){\r\n            setSlideIndex(slideIndex - 1)\r\n        }\r\n        else if (slideIndex === 1){\r\n            setSlideIndex(dataSlider.length)\r\n        }\r\n    }\r\n\r\n    const moveDot = index => {\r\n        setSlideIndex(index)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-slider\">\r\n            {dataSlider.map((obj, index) => {\r\n                return (\r\n                    <div\r\n                    key={obj.id}\r\n                    className={slideIndex === index + 1 ? \"slide active-anim\" : \"slide\"}>\r\n                        <img src={process.env.PUBLIC_URL + `/ProjectImgs/img${index + 1}.jpg`}/>\r\n                    </div>\r\n                )\r\n            })}\r\n            <BtnSlider moveSlide={nextSlide} direction={\"next\"} />\r\n            <BtnSlider moveSlide={prevSlide} direction={\"prev\"}/>\r\n\r\n            <div className=\"container-dots\">\r\n                {Array.from({length: 4}).map((item, index) => (\r\n                    <div \r\n                    onClick={() => moveDot(index + 1)}\r\n                    className={slideIndex === index + 1 ? \"dot active\" : \"dot\"}\r\n                    ></div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectSlider/BtnSlider.js",["452"],"import React from \"react\";\nimport \"./Slider.css\";\nimport leftArrow from \"./icons/left-arrow.svg\";\nimport rightArrow from \"./icons/right-arrow.svg\";\n\nexport default function BtnSlider({ direction, moveSlide }) {\n  console.log(direction, moveSlide);\n  return (\n    <button id=\"sButton\"\n      onClick={moveSlide}\n      className={direction === \"next\" ? \"btn-slide next\" : \"btn-slide prev\"}>\n      <img src={direction === \"next\" ? rightArrow : leftArrow}/>\n    </button>\n  );\n}","/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/ProjectSlider/dataSlider.js",[],"/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/src/components/uprofile.js",[],{"ruleId":"453","replacedBy":"454"},{"ruleId":"455","replacedBy":"456"},{"ruleId":"457","severity":1,"message":"458","line":4,"column":8,"nodeType":"459","messageId":"460","endLine":4,"endColumn":21},{"ruleId":"457","severity":1,"message":"461","line":5,"column":8,"nodeType":"459","messageId":"460","endLine":5,"endColumn":19},{"ruleId":"457","severity":1,"message":"462","line":6,"column":8,"nodeType":"459","messageId":"460","endLine":6,"endColumn":19},{"ruleId":"453","replacedBy":"463"},{"ruleId":"455","replacedBy":"464"},{"ruleId":"453","replacedBy":"465"},{"ruleId":"455","replacedBy":"466"},{"ruleId":"457","severity":1,"message":"467","line":2,"column":17,"nodeType":"459","messageId":"460","endLine":2,"endColumn":26},{"ruleId":"457","severity":1,"message":"468","line":4,"column":10,"nodeType":"459","messageId":"460","endLine":4,"endColumn":15},{"ruleId":"457","severity":1,"message":"469","line":4,"column":17,"nodeType":"459","messageId":"460","endLine":4,"endColumn":23},{"ruleId":"457","severity":1,"message":"470","line":8,"column":9,"nodeType":"459","messageId":"460","endLine":8,"endColumn":17},{"ruleId":"457","severity":1,"message":"469","line":3,"column":9,"nodeType":"459","messageId":"460","endLine":3,"endColumn":15},{"ruleId":"457","severity":1,"message":"471","line":17,"column":8,"nodeType":"459","messageId":"460","endLine":17,"endColumn":13},{"ruleId":"457","severity":1,"message":"472","line":75,"column":8,"nodeType":"459","messageId":"460","endLine":75,"endColumn":16},{"ruleId":"453","replacedBy":"473"},{"ruleId":"455","replacedBy":"474"},{"ruleId":"457","severity":1,"message":"475","line":9,"column":8,"nodeType":"459","messageId":"460","endLine":9,"endColumn":19},{"ruleId":"457","severity":1,"message":"476","line":12,"column":8,"nodeType":"459","messageId":"460","endLine":12,"endColumn":14},{"ruleId":"453","replacedBy":"477"},{"ruleId":"455","replacedBy":"478"},{"ruleId":"479","severity":1,"message":"480","line":145,"column":9,"nodeType":"481","messageId":"482","endLine":145,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":146,"column":9,"nodeType":"481","messageId":"482","endLine":146,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":147,"column":9,"nodeType":"481","messageId":"482","endLine":147,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":148,"column":9,"nodeType":"481","messageId":"482","endLine":148,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":149,"column":9,"nodeType":"481","messageId":"482","endLine":149,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":150,"column":9,"nodeType":"481","messageId":"482","endLine":150,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":151,"column":9,"nodeType":"481","messageId":"482","endLine":151,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":160,"column":13,"nodeType":"481","messageId":"482","endLine":160,"endColumn":23},{"ruleId":"457","severity":1,"message":"483","line":83,"column":13,"nodeType":"459","messageId":"460","endLine":83,"endColumn":22},{"ruleId":"457","severity":1,"message":"475","line":9,"column":8,"nodeType":"459","messageId":"460","endLine":9,"endColumn":19},{"ruleId":"457","severity":1,"message":"476","line":12,"column":8,"nodeType":"459","messageId":"460","endLine":12,"endColumn":14},{"ruleId":"479","severity":1,"message":"480","line":145,"column":9,"nodeType":"481","messageId":"482","endLine":145,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":146,"column":9,"nodeType":"481","messageId":"482","endLine":146,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":147,"column":9,"nodeType":"481","messageId":"482","endLine":147,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":148,"column":9,"nodeType":"481","messageId":"482","endLine":148,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":149,"column":9,"nodeType":"481","messageId":"482","endLine":149,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":159,"column":13,"nodeType":"481","messageId":"482","endLine":159,"endColumn":23},{"ruleId":"479","severity":1,"message":"480","line":161,"column":13,"nodeType":"481","messageId":"482","endLine":161,"endColumn":23},{"ruleId":"484","severity":1,"message":"485","line":204,"column":36,"nodeType":"486","messageId":"487","endLine":204,"endColumn":38},{"ruleId":"457","severity":1,"message":"488","line":11,"column":8,"nodeType":"459","messageId":"460","endLine":11,"endColumn":13},{"ruleId":"457","severity":1,"message":"489","line":12,"column":10,"nodeType":"459","messageId":"460","endLine":12,"endColumn":16},{"ruleId":"457","severity":1,"message":"470","line":13,"column":9,"nodeType":"459","messageId":"460","endLine":13,"endColumn":17},{"ruleId":"479","severity":1,"message":"480","line":43,"column":10,"nodeType":"481","messageId":"482","endLine":43,"endColumn":20},{"ruleId":"479","severity":1,"message":"480","line":52,"column":10,"nodeType":"481","messageId":"482","endLine":52,"endColumn":20},{"ruleId":"457","severity":1,"message":"475","line":7,"column":8,"nodeType":"459","messageId":"460","endLine":7,"endColumn":19},{"ruleId":"457","severity":1,"message":"476","line":10,"column":8,"nodeType":"459","messageId":"460","endLine":10,"endColumn":14},{"ruleId":"479","severity":1,"message":"480","line":185,"column":9,"nodeType":"481","messageId":"482","endLine":185,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":186,"column":9,"nodeType":"481","messageId":"482","endLine":186,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":187,"column":9,"nodeType":"481","messageId":"482","endLine":187,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":188,"column":9,"nodeType":"481","messageId":"482","endLine":188,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":189,"column":9,"nodeType":"481","messageId":"482","endLine":189,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":190,"column":9,"nodeType":"481","messageId":"482","endLine":190,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":191,"column":9,"nodeType":"481","messageId":"482","endLine":191,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":194,"column":9,"nodeType":"481","messageId":"482","endLine":194,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":204,"column":13,"nodeType":"481","messageId":"482","endLine":204,"endColumn":23},{"ruleId":"479","severity":1,"message":"480","line":206,"column":13,"nodeType":"481","messageId":"482","endLine":206,"endColumn":23},{"ruleId":"484","severity":1,"message":"485","line":339,"column":36,"nodeType":"486","messageId":"487","endLine":339,"endColumn":38},{"ruleId":"457","severity":1,"message":"475","line":6,"column":8,"nodeType":"459","messageId":"460","endLine":6,"endColumn":19},{"ruleId":"457","severity":1,"message":"476","line":9,"column":8,"nodeType":"459","messageId":"460","endLine":9,"endColumn":14},{"ruleId":"479","severity":1,"message":"480","line":146,"column":13,"nodeType":"481","messageId":"482","endLine":146,"endColumn":23},{"ruleId":"479","severity":1,"message":"480","line":148,"column":13,"nodeType":"481","messageId":"482","endLine":148,"endColumn":23},{"ruleId":"484","severity":1,"message":"485","line":193,"column":36,"nodeType":"486","messageId":"487","endLine":193,"endColumn":38},{"ruleId":"457","severity":1,"message":"490","line":126,"column":17,"nodeType":"459","messageId":"460","endLine":126,"endColumn":42},{"ruleId":"457","severity":1,"message":"491","line":127,"column":17,"nodeType":"459","messageId":"460","endLine":127,"endColumn":42},{"ruleId":"457","severity":1,"message":"492","line":128,"column":17,"nodeType":"459","messageId":"460","endLine":128,"endColumn":42},{"ruleId":"457","severity":1,"message":"493","line":129,"column":17,"nodeType":"459","messageId":"460","endLine":129,"endColumn":36},{"ruleId":"457","severity":1,"message":"494","line":130,"column":17,"nodeType":"459","messageId":"460","endLine":130,"endColumn":35},{"ruleId":"457","severity":1,"message":"495","line":131,"column":17,"nodeType":"459","messageId":"460","endLine":131,"endColumn":51},{"ruleId":"457","severity":1,"message":"496","line":132,"column":17,"nodeType":"459","messageId":"460","endLine":132,"endColumn":51},{"ruleId":"457","severity":1,"message":"497","line":133,"column":17,"nodeType":"459","messageId":"460","endLine":133,"endColumn":37},{"ruleId":"484","severity":1,"message":"485","line":201,"column":35,"nodeType":"486","messageId":"487","endLine":201,"endColumn":37},{"ruleId":"484","severity":1,"message":"485","line":252,"column":45,"nodeType":"486","messageId":"487","endLine":252,"endColumn":47},{"ruleId":"484","severity":1,"message":"485","line":272,"column":40,"nodeType":"486","messageId":"487","endLine":272,"endColumn":42},{"ruleId":"484","severity":1,"message":"485","line":290,"column":31,"nodeType":"486","messageId":"487","endLine":290,"endColumn":33},{"ruleId":"484","severity":1,"message":"485","line":309,"column":31,"nodeType":"486","messageId":"487","endLine":309,"endColumn":33},{"ruleId":"479","severity":1,"message":"480","line":112,"column":9,"nodeType":"481","messageId":"482","endLine":112,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":113,"column":9,"nodeType":"481","messageId":"482","endLine":113,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":114,"column":9,"nodeType":"481","messageId":"482","endLine":114,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":115,"column":9,"nodeType":"481","messageId":"482","endLine":115,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":116,"column":9,"nodeType":"481","messageId":"482","endLine":116,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":125,"column":13,"nodeType":"481","messageId":"482","endLine":125,"endColumn":23},{"ruleId":"479","severity":1,"message":"480","line":127,"column":13,"nodeType":"481","messageId":"482","endLine":127,"endColumn":23},{"ruleId":"479","severity":1,"message":"480","line":133,"column":13,"nodeType":"481","messageId":"482","endLine":133,"endColumn":23},{"ruleId":"479","severity":1,"message":"480","line":142,"column":13,"nodeType":"481","messageId":"482","endLine":142,"endColumn":23},{"ruleId":"484","severity":1,"message":"485","line":177,"column":36,"nodeType":"486","messageId":"487","endLine":177,"endColumn":38},{"ruleId":"484","severity":1,"message":"485","line":203,"column":36,"nodeType":"486","messageId":"487","endLine":203,"endColumn":38},{"ruleId":"457","severity":1,"message":"498","line":12,"column":3,"nodeType":"459","messageId":"460","endLine":12,"endColumn":9},{"ruleId":"457","severity":1,"message":"499","line":14,"column":3,"nodeType":"459","messageId":"460","endLine":14,"endColumn":7},{"ruleId":"457","severity":1,"message":"500","line":16,"column":2,"nodeType":"459","messageId":"460","endLine":16,"endColumn":11},{"ruleId":"457","severity":1,"message":"501","line":18,"column":3,"nodeType":"459","messageId":"460","endLine":18,"endColumn":15},{"ruleId":"457","severity":1,"message":"502","line":20,"column":3,"nodeType":"459","messageId":"460","endLine":20,"endColumn":11},{"ruleId":"457","severity":1,"message":"470","line":32,"column":10,"nodeType":"459","messageId":"460","endLine":32,"endColumn":18},{"ruleId":"479","severity":1,"message":"480","line":182,"column":9,"nodeType":"481","messageId":"482","endLine":182,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":183,"column":9,"nodeType":"481","messageId":"482","endLine":183,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":184,"column":9,"nodeType":"481","messageId":"482","endLine":184,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":185,"column":9,"nodeType":"481","messageId":"482","endLine":185,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":186,"column":9,"nodeType":"481","messageId":"482","endLine":186,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":194,"column":13,"nodeType":"481","messageId":"482","endLine":194,"endColumn":23},{"ruleId":"484","severity":1,"message":"485","line":303,"column":36,"nodeType":"486","messageId":"487","endLine":303,"endColumn":38},{"ruleId":"503","severity":1,"message":"504","line":29,"column":46,"nodeType":"505","messageId":"506","endLine":29,"endColumn":48},{"ruleId":"503","severity":1,"message":"504","line":32,"column":50,"nodeType":"505","messageId":"506","endLine":32,"endColumn":52},{"ruleId":"457","severity":1,"message":"475","line":5,"column":8,"nodeType":"459","messageId":"460","endLine":5,"endColumn":19},{"ruleId":"457","severity":1,"message":"507","line":6,"column":8,"nodeType":"459","messageId":"460","endLine":6,"endColumn":22},{"ruleId":"457","severity":1,"message":"508","line":7,"column":8,"nodeType":"459","messageId":"460","endLine":7,"endColumn":16},{"ruleId":"457","severity":1,"message":"476","line":8,"column":8,"nodeType":"459","messageId":"460","endLine":8,"endColumn":14},{"ruleId":"457","severity":1,"message":"509","line":102,"column":15,"nodeType":"459","messageId":"460","endLine":102,"endColumn":27},{"ruleId":"457","severity":1,"message":"483","line":41,"column":13,"nodeType":"459","messageId":"460","endLine":41,"endColumn":22},{"ruleId":"457","severity":1,"message":"510","line":7,"column":3,"nodeType":"459","messageId":"460","endLine":7,"endColumn":19},{"ruleId":"511","severity":1,"message":"512","line":9,"column":1,"nodeType":"513","endLine":29,"endColumn":2},{"ruleId":"511","severity":1,"message":"512","line":12,"column":1,"nodeType":"513","endLine":34,"endColumn":2},{"ruleId":"511","severity":1,"message":"512","line":19,"column":1,"nodeType":"513","endLine":51,"endColumn":2},{"ruleId":"514","severity":1,"message":"515","line":39,"column":25,"nodeType":"516","endLine":39,"endColumn":97},{"ruleId":"514","severity":1,"message":"515","line":12,"column":7,"nodeType":"516","endLine":12,"endColumn":65},"no-native-reassign",["517"],"no-negated-in-lhs",["518"],"no-unused-vars","'CreateBooking' is defined but never used.","Identifier","unusedVar","'EditBooking' is defined but never used.","'TourDetails' is defined but never used.",["517"],["518"],["517"],["518"],"'Component' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.",["517"],["518"],"'SplitButton' is defined but never used.","'Select' is defined but never used.",["517"],["518"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'animal_id' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'store' is defined but never used.","'isAuth' is defined but never used.","'Feeding_And_Watering_Date' is assigned a value but never used.","'Feeding_And_Watering_Time' is assigned a value but never used.","'Animal_Satisfaction_Level' is assigned a value but never used.","'Animal_Health_Level' is assigned a value but never used.","'Attended_Zookeeper' is assigned a value but never used.","'Date_Of_Treatment_And_Medical_Care' is assigned a value but never used.","'Time_Of_Treatment_And_Medical_Care' is assigned a value but never used.","'Current_Enclosure_ID' is assigned a value but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.","'CardBody' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'handleSelect' is assigned a value but never used.","'REGISTER_SUCCESS' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]